Imports ECCore
Imports ECCore.AHPConverterHelperFunctions
Imports System.IO
Imports GenericDBAccess
Imports System.Data.Common
Imports System.Xml

Namespace ECCore
    Public Module Attributes
        Public ReadOnly ATTRIBUTE_PAIRWISE_TYPE_ID As New Guid("{6CA1346F-021C-42ea-A414-418EEE345E83}")
        Public Const ATTRIBUTE_PAIRWISE_TYPE_NAME As String = "PairwiseType"

        Public ReadOnly ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_ID As New Guid("{D912BBDE-BDAC-4133-B7A7-44378A73BBD6}") 'A1088
        Public Const ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_NAME As String = "ForceGraphical" 'A1088

        Public ReadOnly ATTRIBUTE_EVALUATE_DIAGONALS_MODE_ID As New Guid("{5F7E1448-2989-412c-A08E-90AC20D45915}")
        Public Const ATTRIBUTE_EVALUATE_DIAGONALS_MODE_NAME As String = "EvaluateDiagonalsMode"

        Public ReadOnly ATTRIBUTE_EVALUATE_DIAGONALS_ADVANCED_MODE_ID As New Guid("{E3CD2AD9-560C-451c-8F61-97D112AD277C}")
        Public Const ATTRIBUTE_EVALUATE_DIAGONALS_ADVANCED_MODE_NAME As String = "EvaluateDiagonalsAdvancedMode"

        Public ReadOnly ATTRIBUTE_DEFAULT_BRUSH_COLOR_ID As New Guid("{94945357-719B-4AD5-B111-EDC65B6BB671}")
        Public Const ATTRIBUTE_DEFAULT_BRUSH_COLOR_NAME As String = "DefaultBrushColor"

        Public ReadOnly ATTRIBUTE_DEFAULT_BRUSH_COLOR_OBJECTIVE_ID As New Guid("{C4CCE520-493C-4D92-8943-50C77CC052DD}")
        Public Const ATTRIBUTE_DEFAULT_BRUSH_COLOR_OBJECTIVE_NAME As String = "DefaultBrushColorObjective"

        Public ReadOnly ATTRIBUTE_DEFAULT_BRUSH_COLOR_IMPACT_ID As New Guid("{F126D2B6-B771-4A0F-91A2-61F3ECEBEA1E}")
        Public Const ATTRIBUTE_DEFAULT_BRUSH_COLOR_IMPACT_NAME As String = "DefaultBrushColorCause"

        Public ReadOnly ATTRIBUTE_CLUSTER_PHRASE_ID As New Guid("{1DFE03C5-1F67-4F43-9DD0-C2D62A399C2A}")
        Public Const ATTRIBUTE_CLUSTER_PHRASE_NAME As String = "ClusterPhrase"

        Public ReadOnly ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_ID As New Guid("{2EC823E7-60B8-4EB5-B9A1-23EE2DD7D908}")    ' D4133
        Public Const ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_NAME As String = "ClusterPhraseRiskControls"                   ' D4133

        Public ReadOnly ATTRIBUTE_CLUSTER_PHRASE_MULTI_ID As New Guid("{C87BD075-671A-4E08-9702-0CC88795E099}")
        Public Const ATTRIBUTE_CLUSTER_PHRASE_MULTI_NAME As String = "ClusterPhraseMulti"

        Public ReadOnly ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_MULTI_ID As New Guid("{8715AFA9-4902-472B-B45C-AE3EA761F9AF}")  ' D4133
        Public Const ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_MULTI_NAME As String = "ClusterPhraseMultiRiskControls"            ' D4133

        ' D4328 ===
        Public ReadOnly ATTRIBUTE_CLUSTER_PHRASE_LOCAL_RES_ID As New Guid("{CC872F37-AC3E-4174-BD2F-57152196DE2C}")
        Public Const ATTRIBUTE_CLUSTER_PHRASE_LOCAL_RES_NAME As String = "ClusterPhraseLocalRes"

        'Public ReadOnly ATTRIBUTE_CLUSTER_PHRASE_GLOBAL_RES_ID As New Guid("{83470198-5A5B-4282-A001-CBEFB72F5FDA}")
        'Public Const ATTRIBUTE_CLUSTER_PHRASE_GLOBAL_RES_NAME As String = "ClusterPhraseGlobalRes"
        ' D4328 ==

        Public ReadOnly ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_ID As New Guid("{C12A1845-F211-46F8-B2CA-A4769FCFE76F}")
        Public Const ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_NAME As String = "DisplayOptionPairwise"

        Public ReadOnly ATTRIBUTE_DISPLAY_OPTION_RATINGS_ID As New Guid("{647CC735-E037-4865-9330-9451252E4E24}")
        Public Const ATTRIBUTE_DISPLAY_OPTION_RATINGS_NAME As String = "DisplayOptionRatings"

        Public ReadOnly ATTRIBUTE_COST_ID As New Guid("{6AF3F55E-FF7C-4EDE-BC7C-03653805D169}")
        Public Const ATTRIBUTE_COST_NAME As String = "Cost"

        Public ReadOnly ATTRIBUTE_MAPKEY_ID As New Guid("{5C6FAEFD-EC2F-4647-85ED-05D1046E9578}") 'AS/12323zn
        Public Const ATTRIBUTE_MAPKEY_NAME As String = "Map Key" 'AS/12323zn

        Public ReadOnly ATTRIBUTE_START_ID As New Guid("{0b24dc14-e5c0-4b91-b858-49fce5839216}") 'AS/15597c
        Public Const ATTRIBUTE_START_NAME As String = "Start" 'AS/15597c

        Public ReadOnly ATTRIBUTE_FINISH_ID As New Guid("{6adc350c-057a-4219-ab2e-6d2f9bba7553}") 'AS/15597c
        Public Const ATTRIBUTE_FINISH_NAME As String = "Finish" 'AS/15597c

        Public ReadOnly ATTRIBUTE_KNOWN_VALUE_ID As New Guid("{F0C33E5F-2073-4AD7-831F-86E22069FD24}")
        Public Const ATTRIBUTE_KNOWN_VALUE_NAME As String = "Known Likelihood"

        Public ReadOnly ATTRIBUTE_NODE_SYNTHESIS_TYPE_ID As New Guid("{6A1299FA-F333-45AD-AA76-BDE2E23A6178}") 'A1241
        Public Const ATTRIBUTE_NODE_SYNTHESIS_TYPE_NAME As String = "NodeSYnthType" 'A1241 - Max rather than sum in synthesis: 0 - sum, 1 - max

        Public ReadOnly ATTRIBUTE_IS_STRUCTURAL_ADJUST_NODE_ID As New Guid("{181D1B8D-3C8C-47B1-95FA-E1CD8338A0C9}") 'A1240
        Public Const ATTRIBUTE_IS_STRUCTURAL_ADJUST_NODE_NAME As String = "IsStrucuturalAdjustNode" 'A1240

        Public ReadOnly ATTRIBUTE_STRUCTURAL_ADJUST_OPTION_ID As New Guid("{A0F0CF9E-CE2C-41AA-A559-C9C374C04CE9}") 'A1240
        Public Const ATTRIBUTE_STRUCTURAL_ADJUST_OPTION_NAME As String = "StrucuturalAdjustOption" 'A1240

        Public ReadOnly ATTRIBUTE_RESULTS_ALTERNATIVE_IS_SELECTED_ID As New Guid("{ED5738B4-C9BD-4C65-A3B6-2E0719AAAB62}") 'A1120
        Public Const ATTRIBUTE_RESULTS_ALTERNATIVE_IS_SELECTED_NAME As String = "Results_AltIsSelected" 'A1120

        Public ReadOnly ATTRIBUTE_CONTROL_COST_ID As New Guid("{F574E38D-E1A2-44D9-8932-46DC6B367C86}")
        Public Const ATTRIBUTE_CONTROL_COST_NAME As String = "ControlCost"

        Public ReadOnly ATTRIBUTE_CONTROL_CATEGORY_ID As New Guid("{DD66A017-33AC-4E91-BA8B-3EE15CFA1BA7}") 'A0885
        Public ReadOnly ATTRIBUTE_CONTROL_CATEGORY_ENUM_ID As New Guid("{0815FAA6-527B-4498-9004-A3D98B1094A8}") 'A0885
        Public Const ATTRIBUTE_CONTROL_CATEGORY_NAME As String = "ControlCategory" 'A0885

        Public ReadOnly ATTRIBUTE_RISK_ID As New Guid("{42373A39-6385-4012-9EA8-50A99528BC2A}")
        Public Const ATTRIBUTE_RISK_NAME As String = "Risk"

        Public ReadOnly ATTRIBUTE_RA_CONSTRAINT_NETWORK_ID As New Guid("{150FA396-0B7D-4D89-AFB6-D7C45CE3E8DC}") 'RA_AS
        Public Const ATTRIBUTE_RA_CONSTRAINT_NETWORK_NAME As String = "Network" 'RA_AS

        Public ReadOnly ATTRIBUTE_RA_PROJECT_MGRS_ID As New Guid("{E861A209-8B60-4975-B370-6D70FDAC3A28}") 'RA_AS
        Public Const ATTRIBUTE_RA_PROJECT_MGRS_NAME As String = "Project Mgrs" 'RA_AS

        Public ReadOnly ATTRIBUTE_RATING_SCALE_PAIRWISE_TYPE_ID As New Guid("{65EEDDA0-59A6-48A3-8694-4E5B5165B48A}")
        Public Const ATTRIBUTE_RATING_SCALE_PAIRWISE_TYPE_NAME As String = "PairwiseType"

        Public ReadOnly ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_MODE_ID As New Guid("{21AEEF90-B376-4E95-B6B9-D3698B911754}")
        Public Const ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_MODE_NAME As String = "EvaluateDiagonalsMode"

        Public ReadOnly ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_ADVANCED_MODE_ID As New Guid("{EF706EB8-99DB-49BD-9B22-E6D475F9FE42}")
        Public Const ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_ADVANCED_MODE_NAME As String = "EvaluateDiagonalsAdvancedMode"

        Public ReadOnly ATTRIBUTE_RATING_SCALE_FORCE_GRAPHICAL_ID As New Guid("{1A2A4139-A2E0-4B2B-8BF4-928028AB2B95}")
        Public Const ATTRIBUTE_RATING_SCALE_FORCE_GRAPHICAL_NAME As String = "ForceGraphical"

        Public ReadOnly ATTRIBUTE_RATING_SCALE_SHOW_INCONSISTENCY_RATIO_ID As New Guid("{EC222522-91C4-4901-B7C2-E7F176ABCBC8}")
        Public Const ATTRIBUTE_RATING_SCALE_SHOW_INCONSISTENCY_RATIO_NAME As String = "ShowInconsistency"

        Public ReadOnly ATTRIBUTE_RATING_SCALE_SHOW_MULTI_PW_ID As New Guid("{53B1A4EA-FA58-44FC-A2D7-EDE70A093320}")
        Public Const ATTRIBUTE_RATING_SCALE_SHOW_MULTI_PW_NAME As String = "ShowMultiPW"

        Public Const UNDEFINED_ATTRIBUTE_DEFAULT_VALUE As String = "UNDEFINED_DEFAULT_VALUE"
        Public Const UNDEFINED_ATTRIBUTE_DEFAULT_DOUBLE_VALUE As Long = Integer.MinValue

        Public ALTERNATIVES_HEADER_ITEM_ID As New Guid("{f0d20c74-cf66-4ec2-a9a6-00a48df6f49c}")

        Public ReadOnly ATTRIBUTE_RISK_NODE_TYPE_ID As New Guid("{D0A32138-100D-4D69-BC10-E6EA1BD4F36F}") 'A0829
        Public ReadOnly ATTRIBUTE_RISK_NODE_TYPE_ID_NAME As String = "RiskNodeType" 'A0829

        Public ReadOnly ATTRIBUTE_RISK_NODE_STATICTICAL_DATA_ID As New Guid("{736CB444-224D-4282-B83C-77DEF817A491}") 'A1296
        Public ReadOnly ATTRIBUTE_RISK_NODE_STATICTICAL_DATA_NAME As String = "BayesianUpdatingData" 'A1296

        Public ReadOnly ATTRIBUTE_RISK_EVENT_SORT_ORDER_ID As New Guid("{B3A66790-DBD5-4616-A9E8-07BD0B5C14F8}") 'A1339
        Public ReadOnly ATTRIBUTE_RISK_EVENT_SORT_ORDER_NAME As String = "RiskEventSOrder" 'A1339

        Public ReadOnly ATTRIBUTE_RISK_SORT_CONTROLS_ID As New Guid("{6896256C-F330-4906-9FA2-1F4934343154}")
        Public ReadOnly ATTRIBUTE_RISK_SORT_CONTROLS_NAME As String = "RiskSortControls"

        Public ReadOnly ATTRIBUTE_BUDGET_LIMIT_ID As New Guid("{4A7BEFFC-5F6C-46A4-94F3-F86061669C74}")
        Public ReadOnly ATTRIBUTE_BUDGET_LIMIT_NAME As String = "BudgetLimit"

        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_XAXIS_TITLE_ID As New Guid("{94874185-B6E9-4D9B-8D8E-50ACF5155C9F}") 'A0881
        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_XAXIS_TITLE_NAME As String = "RA_IB_X" 'A0881

        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_YAXIS_TITLE_ID As New Guid("{0BCB3E68-97E2-4B20-8B0E-EB3D3747DC5F}") 'A0881
        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_YAXIS_TITLE_NAME As String = "RA_IB_Y" 'A0881

        Public ReadOnly ATTRIBUTE_RO_IB_PLOT_XAXIS_TITLE_ID As New Guid("{FB391041-8E87-40FC-9F51-D30048BF652D}") 'A1229
        Public ReadOnly ATTRIBUTE_RO_IB_PLOT_XAXIS_TITLE_NAME As String = "RO_IB_X" 'A1229

        Public ReadOnly ATTRIBUTE_RO_IB_PLOT_YAXIS_TITLE_ID As New Guid("{2E87731A-8728-4C10-A101-1581E9C0589B}") 'A1229
        Public ReadOnly ATTRIBUTE_RO_IB_PLOT_YAXIS_TITLE_NAME As String = "RO_IB_Y" 'A1229

        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_TITLE_ID As New Guid("{72F12916-1264-4B02-9A28-ACE0B6EA0F60}") 'A0881
        Public ReadOnly ATTRIBUTE_RA_IB_PLOT_TITLE_NAME As String = "RA_IB_TITLE" 'A0881

        'A1294 ===
        Public ReadOnly ATTRIBUTE_IB_PLOT_MIN_BUDGET_IS_MANUAL_ID As New Guid("{928B53D4-A253-4F8A-8B92-AF085099E860}")
        Public ReadOnly ATTRIBUTE_IB_PLOT_MIN_BUDGET_IS_MANUAL_NAME As String = "RA_IB_IS_MIN_BUDGET_MANUAL"
        Public ReadOnly ATTRIBUTE_IB_PLOT_MAX_BUDGET_IS_MANUAL_ID As New Guid("{589DF0C2-660C-4C66-AED3-93F778F8769A}")
        Public ReadOnly ATTRIBUTE_IB_PLOT_MAX_BUDGET_IS_MANUAL_NAME As String = "RA_IB_IS_MAX_BUDGET_MANUAL"
        Public ReadOnly ATTRIBUTE_IB_PLOT_MIN_BUDGET_VALUE_ID As New Guid("{95217769-8B85-47D2-B641-DDFD1EF81A61}")
        Public ReadOnly ATTRIBUTE_IB_PLOT_MIN_BUDGET_VALUE_NAME As String = "RA_IB_MIN_BUDGET_VALUE"
        Public ReadOnly ATTRIBUTE_IB_PLOT_MAX_BUDGET_VALUE_ID As New Guid("{7B23E9AC-BE62-4F17-8604-88E4835FC888}")
        Public ReadOnly ATTRIBUTE_IB_PLOT_MAX_BUDGET_VALUE_NAME As String = "RA_IB_MAX_BUDGET_VALUE"
        Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_ID_ID As New Guid("{71084191-D84A-4A5F-9DB4-239E02CF56C7}")
        Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_ID_NAME As String = "RA_IB_CUSTOM_CONSTRAINT_ID"
        'Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_MIN_ID As New Guid("{91BB35FB-E3E5-4CEA-8195-E5FA2F68176A}")
        'Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_MIN_NAME As String = "RA_IB_CUSTOM_CONSTRAINT_MIN"
        'Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_MAX_ID As New Guid("{0B504B4A-D887-4389-A7AE-7E8BCFEE4143}")
        'Public ReadOnly ATTRIBUTE_IB_PLOT_CONSTRAINT_MAX_NAME As String = "RA_IB_CUSTOM_CONSTRAINT_MAX"
        'A1294 ==
        Public ReadOnly ATTRIBUTE_IB_HORIZONTAL_SPLITTER_SIZE_ID As New Guid("{4160DAE0-0103-4924-8268-BE8B50858A32}") 'A1347
        Public ReadOnly ATTRIBUTE_IB_HORIZONTAL_SPLITTER_SIZE_NAME As String = "RA_IB_H_SPLITTER_SIZE" 'A1347
        Public ReadOnly ATTRIBUTE_IB_DETAILED_TOOLTIPS_ID As New Guid("{FF57AA93-3CC1-4EDB-A33A-C7B9C4777521}") 'A1348
        Public ReadOnly ATTRIBUTE_IB_DETAILED_TOOLTIPS_NAME As String = "RA_IB_DETAILED_TOOLTIPS" 'A1348
        Public ReadOnly ATTRIBUTE_IB_LAYOUT_MODE_ID As New Guid("{4EFEFCEA-DD84-4476-B830-D918234D4BE5}") 'A1348
        Public ReadOnly ATTRIBUTE_IB_LAYOUT_MODE_NAME As String = "RA_IB_LAYOUT_MODE" 'A1348

        Public ReadOnly ATTRIBUTE_RISK_MAP_XAXIS_TITLE_ID As New Guid("{4FC6B09F-F441-4DF2-807C-00451E15EEC6}") 'A0887
        Public ReadOnly ATTRIBUTE_RISK_MAP_XAXIS_TITLE_NAME As String = "RISK_MAP_X" 'A0887

        Public ReadOnly ATTRIBUTE_RISK_MAP_YAXIS_TITLE_ID As New Guid("{8BA8BEB5-5A43-4E46-9D9F-0B1C54244629}") 'A0887
        Public ReadOnly ATTRIBUTE_RISK_MAP_YAXIS_TITLE_NAME As String = "RISK_MAP_Y" 'A0887

        Public ReadOnly ATTRIBUTE_RA_ALT_SORT_ID As New Guid("{BAF08CCB-96BB-44D1-85CE-D5D64BF3E337}")
        Public ReadOnly ATTRIBUTE_RA_ALT_SORT_NAME As String = "RAAltSort"

        'A0912 ===
        Public ReadOnly ATTRIBUTE_DECIMALS_ID As New Guid("{B4978A58-EF9B-49CC-B481-7FDD2D13E1BE}")
        Public ReadOnly ATTRIBUTE_DECIMALS_NAME As String = "Decimals" 'number of decimal placed displayed

        Public ReadOnly ATTRIBUTE_RA_BUBBLE_SIZE_ID As New Guid("{8AE4C7F3-0B09-4610-B974-8B7E952F2508}")
        Public ReadOnly ATTRIBUTE_RA_BUBBLE_SIZE_NAME As String = "RA_Bubble_Size"
        'A0912 ==

        'A1010 ===
        Public ReadOnly ATTRIBUTE_RA_SHOW_ALT_ATTRIBUTES_ID As New Guid("{F8BAEC63-2CDF-4D07-BF26-F1A19584954E}")
        Public ReadOnly ATTRIBUTE_RA_SHOW_ALT_ATTRIBUTES_NAME As String = "RA_ShowAltAttribute"
        'A1010 ==

        'A0943 ===
        'Public ReadOnly ATTRIBUTE_RISK_MAP_DECIMALS_ID As New Guid("{FD846D54-5E2F-4F16-B057-D79EA693F06B}")
        'Public ReadOnly ATTRIBUTE_RISK_MAP_DECIMALS_NAME As String = "RiskMap_Decimals"
        Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_ID As New Guid("{7AC1F4E6-CB73-4C89-8EA7-E5E7BC73731C}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_NAME As String = "RiskMap_BubbleSize"
        Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_VALUE_ID As New Guid("{D2F4523B-9208-4E57-8D35-F7898274798F}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_VALUE_NAME As String = "RiskMap_BubbleSizeVal"
        Public ReadOnly ATTRIBUTE_RISK_MAP_ZOOM_PLOT_ID As New Guid("{0FDEDF9D-FFD6-49CF-B3F9-BB85B6B5A896}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_ZOOM_PLOT_NAME As String = "RiskMap_ZoomPlot"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SWITCH_AXES_ID As New Guid("{2F2B25E8-15D7-4CEB-9907-C177A10E5590}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SWITCH_AXES_NAME As String = "RiskMap_SwitchAxes"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_REGIONS_ID As New Guid("{7FFBDA1B-04F0-4EB4-940F-C41F2DA3CFEE}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_REGIONS_NAME As String = "RiskMap_ShowRegions"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_LEGENDS_ID As New Guid("{C331B994-498F-431A-A39F-D1B68D6F4A90}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_LEGENDS_NAME As String = "RiskMap_ShowLegends"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_LABELS_ID As New Guid("{16A7C0DF-2582-4084-9654-91A344C7FDA2}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHOW_LABELS_NAME As String = "RiskMap_ShowLabels"
        Public ReadOnly ATTRIBUTE_RISK_MAP_JITTER_DATAPOINTS_ID As New Guid("{25967E6F-6F77-4903-A52E-A1D237698C19}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_JITTER_DATAPOINTS_NAME As String = "RiskMap_JitterDatapoints"
        Public ReadOnly ATTRIBUTE_RISK_MAP_EVENT_CLOUD_ID As New Guid("{71BDECDA-2A1B-4B32-9595-AB3E2AC855FA}") 'A1289
        Public ReadOnly ATTRIBUTE_RISK_MAP_EVENT_CLOUD_NAME As String = "RISK_MAP_EVENT_CLOUD" 'A1289
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_COLOR_BY_CATEGORY_ID As New Guid("{843547D8-593F-4F31-B20F-080EFB6F65FB}")
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_COLOR_BY_CATEGORY_NAME As String = "RiskResults_ColorCodingByCat"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHAPE_BY_CATEGORY_ID As New Guid("{D1CC0E94-FBE8-4F4A-B85B-8DAD0E8D45C3}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SHAPE_BY_CATEGORY_NAME As String = "RiskMap_ShapeBubbleByCat"
        'Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_MULT_ID As New Guid("{09426616-C28C-4429-AAF2-8ABD8714EADC}")
        'Public ReadOnly ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_MULT_NAME As String = "RiskMap_BubbleSizeMult"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SELECTED_COLOR_CATEGORY_ID As New Guid("{0545447E-D20C-4A3F-971F-8629026D3E12}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SELECTED_COLOR_CATEGORY_NAME As String = "RiskMap_SelectedColorCategoryName"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SELECTED_SHAPE_CATEGORY_ID As New Guid("{1145A809-FF3D-47A9-B9BE-9DD1AAC3364C}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SELECTED_SHAPE_CATEGORY_NAME As String = "RiskMap_SelectedShapeCategoryName"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SORT_LEGEND_COL_ID As New Guid("{E82F104B-05F9-4779-A562-766EA50CC4C0}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SORT_LEGEND_COL_NAME As String = "RiskMap_LegendSortCol"
        Public ReadOnly ATTRIBUTE_RISK_MAP_SORT_LEGEND_DIR_ID As New Guid("{7EFD68FB-529B-465D-827A-9497CF640CC7}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_SORT_LEGEND_DIR_NAME As String = "RiskMap_LegendSortDir"
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_TOP_ID As New Guid("{4892192E-6FA5-4004-B757-0BA114E1B5D6}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_TOP_NAME As String = "RiskMap_ReverseZoomTop"
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_RIGHT_ID As New Guid("{C796F7C2-D80B-470C-AEE8-753D397CAEE8}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_RIGHT_NAME As String = "RiskMap_ReverseZoomRight"
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_LEFT_ID As New Guid("{92529967-D2D4-4F72-9E43-D7EB640DF4A3}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_LEFT_NAME As String = "RiskMap_ReverseZoomLeft"
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_BOTTOM_ID As New Guid("{39341066-EDB5-4739-A685-BD9911E56321}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_BOTTOM_NAME As String = "RiskMap_ReverseZoomBottom"
        'A0943 ==
        Public ReadOnly ATTRIBUTE_RISK_MAP_WRT_RISK_LOW_ID As New Guid("{B2DABFB5-E46F-4645-B36F-B673CB9B8F62}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_WRT_RISK_LOW_NAME As String = "RiskMap_WrtNodeRiskLow"
        Public ReadOnly ATTRIBUTE_RISK_MAP_WRT_RISK_HIGH_ID As New Guid("{090EBDFC-47EF-45C5-8608-C5FEA930CDDA}")
        Public ReadOnly ATTRIBUTE_RISK_MAP_WRT_RISK_HIGH_NAME As String = "RiskMap_WrtNodeRiskHigh"
        'A0944 ===
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_LIKELIHOOD_NODE_ID As New Guid("{EADFDFBC-4F52-4F65-9465-7BA2E19D940F}")
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_LIKELIHOOD_NODE_NAME As String = "Risk_SelectedLkhdNode"
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_IMPACT_NODE_ID As New Guid("{77F1A2C5-A95D-469D-99C8-C9B88625BA33}")
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_IMPACT_NODE_NAME As String = "Risk_SelectedImpactNode"
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_EVENT_ID As New Guid("{2B238D90-E8DE-4186-B13C-744DC75BC059}")
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_EVENT_NAME As String = "Risk_SelectedEvent"
        Public ReadOnly ATTRIBUTE_RISK_MULTISELECT_ENABLED_ID As New Guid("{CCCD163E-1799-459F-9042-E811483AE7B0}")
        Public ReadOnly ATTRIBUTE_RISK_MULTISELECT_ENABLED_NAME As String = "Risk_MultiselectEnabled"
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_TREATMENT_ID As New Guid("{B8A4043D-3079-47A0-8378-B3B8C6C5B14D}")
        Public ReadOnly ATTRIBUTE_RISK_SELECTED_TREATMENT_NAME As String = "Risk_SelectedTreatment"
        'A0944 ==        
        'A1229 ===
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_FULL_PATHS_ID As New Guid("{F8EF6CFC-2277-4E18-8817-EA4CD349772A}")
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_FULL_PATHS_NAME As String = "Risk_BowTie_ShowPaths"
        'A1229 ==
        'A1535 ===
        'Public ReadOnly ATTRIBUTE_RISK_EVENT_TYPE_ID As New Guid("{0FC6C487-ECF0-40C4-8B78-3DCF612F3635}")
        'Public ReadOnly ATTRIBUTE_RISK_EVENT_TYPE_NAME As String = "Risk_Event_type"
        'A1535 ==
        'A1250 ===
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_EVENT_ATTR_UI_ID As New Guid("{7FA9AB96-5F62-475B-92AC-1CBEFD4AB724}")
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_EVENT_ATTR_UI_NAME As String = "Risk_BowTie_ShowEventAttrs"
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_BACKGROUND_ID As New Guid("{40AA9144-35DB-44B8-8359-7C5E0BBB3053}")
        Public ReadOnly ATTRIBUTE_RISK_BOWTIE_SHOW_BACKGROUND_NAME As String = "Risk_BowTie_BACKG"
        'A1250 ==
        'A0946 ===
        Public ReadOnly ATTRIBUTE_RA_SB_SYNTHESIS_MODE_ID As New Guid("{2F35CA51-75D2-41BA-B370-BA584F446443}")
        Public ReadOnly ATTRIBUTE_RA_SB_SYNTHESIS_MODE_NAME As String = "RA_SB_Synth_Mode"
        Public ReadOnly ATTRIBUTE_RA_SB_NORMALIZATION_MODE_ID As New Guid("{63854C85-19AC-4B59-B3FC-1436FE6D16EC}")
        Public ReadOnly ATTRIBUTE_RA_SB_NORMALIZATION_MODE_NAME As String = "RA_SB_Norm_Mode"
        'Public ReadOnly ATTRIBUTE_RA_SB_DECIMALS_ID As New Guid("{8B7A249C-7659-4539-8D26-486E37B08C24}")
        'Public ReadOnly ATTRIBUTE_RA_SB_DECIMALS_NAME As String = "RA_SB_Decimals"
        'A0946 ==
        'A0970 ===
        Public ReadOnly ATTRIBUTE_RA_SB_SORT_COLUMN_ID As New Guid("{540DCD93-099B-4EA9-B934-1E58C2D9E608}")
        Public ReadOnly ATTRIBUTE_RA_SB_SORT_COLUMN_NAME As String = "RA_SB_Sort"
        'A0970 ==
        'A0930 ===
        'Public ReadOnly ATTRIBUTE_RISK_SHOW_TOTAL_RISK_ID As New Guid("{F22831DA-6533-4942-9B19-927CD71D646C}")
        'Public ReadOnly ATTRIBUTE_RISK_SHOW_TOTAL_RISK_NAME As String = "Risk_ShowTotalRisk"
        'Public ReadOnly ATTRIBUTE_RISK_SHOW_SIMULATED_RESULTS_ID As New Guid("{F8159645-E1D2-4046-B4C7-704BD8E3ACFC}") 'A1370 + A1393
        'Public ReadOnly ATTRIBUTE_RISK_SHOW_SIMULATED_RESULTS_NAME As String = "Risk_ShowSimResults" 'A1370
        Public ReadOnly ATTRIBUTE_RISK_SHOW_RISK_REDUCTION_ID As New Guid("{836D8670-673C-4417-A154-9CFF4E7F28BC}")
        Public ReadOnly ATTRIBUTE_RISK_SHOW_RISK_REDUCTION_NAME As String = "Risk_ShowRiskReduction"
        'A0938 ==
        Public ReadOnly ATTRIBUTE_RISK_SHOW_CENTS_ID As New Guid("{338CA113-4942-4DA3-94FF-273FEF6DF475}") 'A1345
        Public ReadOnly ATTRIBUTE_RISK_SHOW_CENTS_NAME As String = "Risk_ShowCents" 'A1345
        'A0948 ===
        Public ReadOnly ATTRIBUTE_RISK_SHOW_ATTRIBUTES_ID As New Guid("{02FC3BAB-346D-47C6-AE9E-1436F9A59F17}")
        Public ReadOnly ATTRIBUTE_RISK_SHOW_ATTRIBUTES_NAME As String = "Risk_ShowAttributes"
        Public ReadOnly ATTRIBUTE_RISK_GROUP_BY_ATTRIBUTE_ID As New Guid("{02CCC483-EDD2-422E-A559-4DE6EB1E910D}")
        Public ReadOnly ATTRIBUTE_RISK_GROUP_BY_ATTRIBUTE_NAME As String = "Risk_GroupByAttr"
        Public ReadOnly ATTRIBUTE_RISK_GROUP_BY_ATTR_GUID_ID As New Guid("{82E44D64-5D87-47A0-ABE5-9ECE9674AF8B}")
        Public ReadOnly ATTRIBUTE_RISK_GROUP_BY_ATTR_GUID_NAME As String = "Risk_GroupByAttrGuid"
        'A0948 ==
        'A0950 ===
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_EXPRESSION_ID As New Guid("{846AF758-D358-4153-A63C-A2BE1583B5B8}")
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_EXPRESSION_NAME As String = "Risk_SortExpr"
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_DIRECTION_ID As New Guid("{2F6F4127-F8C3-44BD-B755-A82243FC4DC5}")
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_DIRECTION_NAME As String = "Risk_SortDir"
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_EXPRESSION2_ID As New Guid("{C65A8B92-A77E-4A88-B578-80490982ED4C}")
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_EXPRESSION2_NAME As String = "Risk_SortExpr2" 'sort expression for Risk by Event
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_DIRECTION2_ID As New Guid("{DC9975AB-E475-4824-B18D-6EEA4882B54E}")
        Public ReadOnly ATTRIBUTE_RISK_GRID_SORT_DIRECTION2_NAME As String = "Risk_SortDir2" 'sort direction for Risk by Event
        'A0950 ==
        'A0951 ===
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_PARTICIPANTS_ID As New Guid("{96C9EF33-2C02-490E-BB09-B49A61061C85}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_PARTICIPANTS_NAME As String = "Risk_SelectedParticipants" 'checked users and groups (if multiple selection allowed)
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_USER_ID As New Guid("{DFA8A511-91C7-45D4-908C-A7AAA94367C8}")
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_USER_NAME As String = "Risk_SelectedUser" 'checked user or group (if single selection only allowed)
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_LOCAL_PRTY_ID As New Guid("{F1F55B32-602A-4401-9117-271BD44A868E}")
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_LOCAL_PRTY_NAME As String = "RiskResults_LocalPrty" 'show local priorities in tree
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_GLOBAL_PRTY_ID As New Guid("{2E7B3529-9140-47CF-9C75-AD43A94EBBF9}")
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_GLOBAL_PRTY_NAME As String = "RiskResults_GlobalPrty" 'show global priorities in tree
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_CONTROLS_NAMES_ID As New Guid("{E62C1B2E-A096-4944-B2C8-A88076A91074}") 'A1179
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_CONTROLS_NAMES_NAME As String = "RiskResults_ShowTreatmentNames" 'A1179
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_GROUPS_TOTALS_ID As New Guid("{E96AF041-E87D-4B92-AB43-D71DE8C46923}") 'A1179
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_GROUPS_TOTALS_NAME As String = "RiskResults_ShowGroupTotals" 'A1179
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LKHD_ID As New Guid("{F78D526B-C41B-4F31-8ECB-9C80ACAC4A39}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LKHD_NAME As String = "RiskResults_NormalizedLkhd" 'normaliztion as SynthesisMode
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_LKHD_ID As New Guid("{480E05B6-892D-4802-840A-E6EF69A9501D}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_LKHD_NAME As String = "RiskResults_NormalizedLocalLkhd" 'normaliztion as LocalNormalizationType
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_IMPACT_ID As New Guid("{86A2F17F-D8F2-42B1-B005-6F48B2BF432C}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_IMPACT_NAME As String = "RiskResults_NormalizedLocalImpct" 'normaliztion as LocalNormalizationType
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_ID As New Guid("{6DEAB8B6-25CE-4210-8817-6A68D47FADF0}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_NAME As String = "RiskResults_UseControlsReduction"
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_HIERARCHY_ID As New Guid("{4BE17FD4-00A2-4C71-96AF-3C5AFF98090C}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_HIERARCHY_NAME As String = "RiskResults_UseControlsReductionHierarchy"
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_PANES_COLLAPSE_STATE_ID As New Guid("{C3A8A394-867F-4AAA-A347-AA1D2FB80BAC}")
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_PANES_COLLAPSE_STATE_NAME As String = "RiskResults_PanesCollapseState" 'IsUserPaneCollapsed = 1; IsTreePaneCollapsed = 2; IsAttrPaneCollapsed = 4
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_BARS_RELATIVE_TO_1_STATE_ID As New Guid("{8F1C950E-BB32-4387-BF8A-3827B3EF0860}")
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_BARS_RELATIVE_TO_1_STATE_NAME As String = "RiskResults_BarsRelative1State" 'L = 1; I = 2; R = 4; All Participnats - 8;
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_COLUMNS_ID As New Guid("{71DF50A6-D55B-4FBA-A890-F2F10FF0C88B}") ' The attributes columns shown on the contributions page
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SELECTED_COLUMNS_NAME As String = "RiskResults_SelectedAttrColumns" 'A1201
        Public ReadOnly ATTRIBUTE_DATAGRID_HIDDEN_COLUMNS_ID As New Guid("{1F7027C6-2905-435D-80A0-991C45E53B0A}") 'A1478 The attributes columns hidden on the datagrid page
        Public ReadOnly ATTRIBUTE_DATAGRID_HIDDEN_COLUMNS_NAME As String = "Datagrid_HiddenAttrColumns" 'A1478
        'A0951 ==
        Public ReadOnly ATTRIBUTE_RISK_ROLES_CONTROLS_TYPE_ID As New Guid("{FB77E832-7785-4F96-AA48-BACF9601F3C0}")
        Public ReadOnly ATTRIBUTE_RISK_ROLES_CONTROLS_TYPE_NAME As String = "RiskRoles_ControlsType" '-1 - All, 0 - Controls for Sources, 3 - Controls for Vulnerabilities, 4 - Controls for Consequences
        'Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_EVENTS_IDS_ID As New Guid("{81646BB3-08EF-4B4C-920C-6B7FC251029C}") 'A1218
        'Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_EVENTS_IDS_NAME As String = "RiskOptimizer_EventsIDs" 'A1218
        'Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_CONTROL_IDS_ID As New Guid("{0FE32A93-04E7-481E-9AD1-ABBE4934609A}") 'A1253
        'Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_CONTROL_IDS_NAME As String = "RiskOptimizer_ControlsIDs" 'A1253
        Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_IB_ZOOM_PLOT_ID As New Guid("{3DC6B73A-64C3-424D-9B67-63A29267811B}") 'A1254 - {327C674E-86CC-4EE4-8B36-547EB2AF4553}
        Public ReadOnly ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_IB_ZOOM_PLOT_NAME As String = "RiskOptimizer_IB_ZOOM" 'A1254

        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_BUDGET_ID As New Guid("{D784661C-2C82-4747-8273-8F6716F0B1E9}") 'A1232
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_BUDGET_NAME As String = "TreatmentsOptimization_EventsIDs" 'A1232        
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_MAX_RISK_ID As New Guid("{ECC3753B-CDE3-49A2-AD2F-D8B048C3F230}") 'A1237
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_MAX_RISK_NAME As String = "TreatmentsOptimization_MaxRisk" 'A1237
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_MIN_REDUCTION_ID As New Guid("{C549C416-4F21-4378-BFAF-9202266206A0}") 'A1237
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_MIN_REDUCTION_NAME As String = "TreatmentsOptimization_MinReduction" 'A1237
        Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_TYPE_ID As New Guid("{BDD97118-5194-4142-9D74-9FDDC1B04AF7}") 'A1237
        Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_TYPE_NAME As String = "TreatmentsOptimization_Type" 'A1237
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_Y_AXIS_0_ID As New Guid("{DE2E4888-A328-4FA9-B417-2F5CDD6A18AF}") 'A1322
        'Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_Y_AXIS_0_NAME As String = "TreatmentsOptimization_EF_Y_Axis_0" 'A1322
        Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_SHOW_SOLVER_PANE_RISK_RESULTS_ID As New Guid("{4B4C19BD-9205-49BE-A263-E4CBE0806DEF}") 'A1322
        Public ReadOnly ATTRIBUTE_RISK_OPTIMIZER_SHOW_SOLVER_PANE_RISK_RESULTS_NAME As String = "TreatmentsOptimization_ShowSolverPaneOnRiskResults" 'A1322
        'Public ReadOnly ATTRIBUTE_RISK_CONTROLS_MANUAL_ID As New Guid("{D59762C2-2CE0-437D-9F8B-B0AA9691E2AF}") 'A1270
        'Public ReadOnly ATTRIBUTE_RISK_CONTROLS_MANUAL_NAME As String = "TreatmentsOptimization_ControlsSelectedManually" 'A1270
        Public ReadOnly ATTRIBUTE_RISK_CONTROL_ENABLED_ID As New Guid("{2446854B-AB68-49E4-8B5F-7D09EE7985DD}") 'A1394
        Public ReadOnly ATTRIBUTE_RISK_CONTROL_ENABLED_NAME As String = "ControlEnabled" 'A1394

        'A0940 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SETTINGS_ID As New Guid("{76E815C7-D683-46D8-B839-7B24A4B892FC}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SETTINGS_NAME As String = "Synthesis_Settings"
        'A0948 ==
        'A1020 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_LAYOUT_ID As New Guid("{3C68C2BD-E00E-4ADD-B76B-D029DA828118}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_LAYOUT_NAME As String = "Synthesis_Layout"
        'A1020 ==
        'A1020 ===
        Public ReadOnly ATTRIBUTE_DASHBOARD_LAYOUT_ID As New Guid("{C266E8FD-3724-4840-8614-A9E951601490}")
        Public ReadOnly ATTRIBUTE_DASHBOARD_LAYOUT_NAME As String = "Dashboard_Layout"
        'A1020 ==
        'A1022 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_DECIMALS_ID As New Guid("{1A213DF6-A21A-4424-BC1D-E2C394827692}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_DECIMALS_NAME As String = "Synthesis_Decimals"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SA_USER_ID As New Guid("{3DD5C402-FEDD-434A-9A6E-D927C9FBDEC5}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SA_USER_NAME As String = "Synthesis_SA_User"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_USERS_ID As New Guid("{F28CF3F6-6C3B-415A-9B5B-ADEED7C2D0A3}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_USERS_NAME As String = "Synthesis_Participants"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_FILTER_ID As New Guid("{56D45A3B-578D-441E-B21B-6C9220C37480}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_FILTER_NAME As String = "Synthesis_AltsFilter"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_4ASA_USERS_ID As New Guid("{8338C36F-4BF8-4B8E-8B18-83093DD8B047}") 'A1216
        Public ReadOnly ATTRIBUTE_SYNTHESIS_4ASA_USERS_NAME As String = "Synthesis_4ASA_Participants" 'A1216
        'A1077 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_ID As New Guid("{21709B14-713F-49C2-A310-F31D5051B63A}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_NAME As String = "Synthesis_AltsAdvancedFilter"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_UID_ID As New Guid("{CE75832D-5275-40AD-A54B-A64C9B9A85AE}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_UID_NAME As String = "Synthesis_AltsAdvancedFilterUserID"
        'Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_CUST_FILTER_ID As New Guid("{7C66B3CF-5CAA-4F6F-AA6A-8425DE957934}")
        'Public ReadOnly ATTRIBUTE_SYNTHESIS_ALTS_CUST_FILTER_NAME As String = "Synthesis_AltsAdvancedFilterUserID"
        'A1077 ==
        'A1022 ==
        'A1042 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_CV_SHOW_ALL_ROWS_ID As New Guid("{201AC47E-74FB-4D8A-9119-8131E76DF6D3}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_CV_SHOW_ALL_ROWS_NAME As String = "Synthesis_CV_ALL_ROWS"
        Public ReadOnly ATTRIBUTE_SYNTHESIS_CV_SHOW_TOP_N_ROWS_ID As New Guid("{0AC39B19-4672-43E8-A2B9-CC4DBF7BDBEF}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_CV_SHOW_TOP_N_ROWS_NAME As String = "Synthesis_CV_TOP_N_ROWS"
        'A1042 ==
        'A1076 ===
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SHOW_USERS_WITH_NO_RESULTS_ID As New Guid("{AA81634D-DA1A-4139-AC2A-DA05424FA26B}")
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SHOW_USERS_WITH_NO_RESULTS_NAME As String = "Synthesis_ShowUsersWithNoData"
        'A1076 ==
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SHOW_COMPONENTS_ID As New Guid("{CB6A7667-E748-415D-A541-3BB0BF019FC4}") 'A1271
        Public ReadOnly ATTRIBUTE_SYNTHESIS_SHOW_COMPONENTS_NAME As String = "Synthesis_ShowComponents" 'A1271
        Public ReadOnly ATTRIBUTE_SYNTHESIS_WRT_STATE_ID As New Guid("{683BF639-6659-4917-A3FC-88311544194E}") 'A1343
        Public ReadOnly ATTRIBUTE_SYNTHESIS_WRT_STATE_NAME As String = "Synthesis_WRTState" 'A1343
        'A0953 ===
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_INCREMENT_ID As New Guid("{F47161D2-6C79-4042-A14B-18E32C3F9031}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_INCREMENT_NAME As String = "RA_IB_SPEC_Inc"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_DECREMENT_ID As New Guid("{03D88F0E-0EE6-4C9B-B481-921BC6C58556}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_DECREMENT_NAME As String = "RA_IB_SPEC_Dec"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_NUM_INCREMENTS_ID As New Guid("{E91F0652-89C0-45EA-ABCF-A83DC73620C7}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_NUM_INCREMENTS_NAME As String = "RA_IB_Num_Inc"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_PRECISION_ID As New Guid("{8264FE48-289F-426A-AB08-713AFBFFB39D}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_PRECISION_NAME As String = "RA_IB_Precision"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_INCREASE_MODE_ID As New Guid("{FC4D54B7-BC02-4B64-AC72-D8E9DE80BE32}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_INCREASE_MODE_NAME As String = "RA_IB_IncreaseMode"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_GRID_MODE_ID As New Guid("{5768FCC6-87AB-4A32-8C2C-60B9C834F019}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_GRID_MODE_NAME As String = "RA_IB_GridMode"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_KEEP_FUNDED_ID As New Guid("{5D04098C-E5BC-4FEE-8B95-7EB9982EF2F7}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_KEEP_FUNDED_NAME As String = "RA_IB_KeepFunded"
        'A0953 ==
        'A1310 ===
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_FROM_ID As New Guid("{268CED76-14DF-4303-B394-F3E00B2D7D1B}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_FROM_NAME As String = "RA_IB_FROM"
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_TO_ID As New Guid("{C74F10E3-2690-45D2-864D-8BE4EA0A5C95}")
        Public ReadOnly ATTRIBUTE_RA_PARETO_CURVE_TO_NAME As String = "RA_IB_TO"
        'A1310 ==
        ' D3781 ===
        Public ReadOnly ATTRIBUTE_RA_DEPENDENCIES_VIEW_ID As New Guid("{88055213-ED44-4B64-B1AF-257C727A78BF}")
        Public ReadOnly ATTRIBUTE_RA_DEPENDENCIES_VIEW_NAME As String = "RA_DependenciesView"
        Public ReadOnly ATTRIBUTE_RA_SHOW_CC_ID As New Guid("{7A1696CC-BB52-406F-9934-0AD1E1E18BB2}")
        Public ReadOnly ATTRIBUTE_RA_SHOW_CC_NAME As String = "RA_ShowCC"
        Public ReadOnly ATTRIBUTE_RA_COLUMNS_VERSION_ID As New Guid("{401B1F8A-9C69-4481-AABA-BFEFC78EAEE7}")
        Public ReadOnly ATTRIBUTE_RA_COLUMNS_VERSION_NAME As String = "RA_ColumnsVer"
        Public ReadOnly ATTRIBUTE_RA_COLUMNS_LIST_ID As New Guid("{0728BCF2-95E7-40ED-88EF-790FC876DD26}")
        Public ReadOnly ATTRIBUTE_RA_COLUMNS_LIST_NAME As String = "RA_ColumnsList"
        ' D3781 ==

        'A1115 ===
        Public ReadOnly ATTRIBUTE_ALTERNAITVE_FUNDED_IN_CURRENT_SCENARIO_ID As New Guid("{9BD913BA-6E40-42C3-AF90-A1BD4ACC5D07}")
        Public ReadOnly ATTRIBUTE_ALTERNAITVE_FUNDED_IN_CURRENT_SCENARIO_NAME As String = "RA_alt_funded_in_cur_scenario"
        'A1115 ==

        'A0957 ===
        Public ReadOnly ATTRIBUTE_COLUMNS_ORDER_ALTERNATIVES_ID As New Guid("{3FC37C72-66D0-492B-8385-A7BBD43D53FA}")
        Public ReadOnly ATTRIBUTE_COLUMNS_ORDER_ALTERNATIVES_NAME As String = "StructureAlts_ColumnsOrder"
        Public ReadOnly ATTRIBUTE_COLUMNS_ORDER_PARTICIPANTS_ID As New Guid("{16C0E513-CA30-4C01-873B-5CB6B6501932}")
        Public ReadOnly ATTRIBUTE_COLUMNS_ORDER_PARTICIPANTS_NAME As String = "Participants_ColumnsOrder"
        'A0957 ==

        Public ReadOnly ATTRIBUTE_MANAGE_GROUPS_GRID_SETTINGS_ID As New Guid("{B04E744B-B792-4CD0-B901-E1440C37E995}")
        Public ReadOnly ATTRIBUTE_MANAGE_GROUPS_GRID_SETTINGS_NAME As String = "Manage_Groups_Grid_Settings"

        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_ID As New Guid("{B6D9D35B-AD48-4857-AB18-996B1B5BB867}")
        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_NAME As String = "InfodocsParams"

        'A1012 ===
        Public ReadOnly ATTRIBUTE_HIERARCHY_SHOW_ALTERNATIVES_ID As New Guid("{4346C3AD-7AC6-4ECB-A91E-3D96A2925E43}")
        Public ReadOnly ATTRIBUTE_HIERARCHY_SHOW_ALTERNATIVES_NAME As String = "Hierarchy_show_alts"
        'A1012 ==

        ' D4047 ===
        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_MULTI_ID As New Guid("{CBBEB649-F008-43D4-8EC1-215CF186DBB4}")
        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_MULTI_NAME As String = "InfodocsMultiParams"

        Public ReadOnly ATTRIBUTE_INFODOC_COLLAPSE_ID As New Guid("{0B8255CE-3F63-4407-93D6-7C74C4F187AE}")
        Public ReadOnly ATTRIBUTE_INFODOC_COLLAPSE_NAME As String = "InfodocsCollapse"

        Public ReadOnly ATTRIBUTE_INFODOC_COLLAPSE_MULTI_ID As New Guid("{0B8255CE-3F63-4407-93D6-7C74C4F187AE}")
        Public ReadOnly ATTRIBUTE_INFODOC_COLLAPSE_MULTI_NAME As String = "InfodocsMultiCollapse"
        ' D4047 ==

        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_GECKO_ID As New Guid("{11087307-66E8-4E96-8789-118D79ED49F8}") ' D3554
        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_GECKO_NAME As String = "InfodocGeckoParams"   ' D3554

        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_MULTI_GECKO_ID As New Guid("{312D7FC8-76C9-41C1-B1BB-34F060FF352D}") ' D4047
        Public ReadOnly ATTRIBUTE_INFODOC_PARAMS_MULTI_GECKO_NAME As String = "InfodocMultiGeckoParams" ' D4047

        ' D3580 ===
        Public ReadOnly ATTRIBUTE_CUSTOM_EMAIL_ID As New Guid("{80F0363C-0BB6-4F1D-8D38-D506B77BE64A}")
        Public ReadOnly ATTRIBUTE_CUSTOM_EMAIL_NAME As String = "CustomEmail"
        Public ReadOnly CUSTOM_EMAIL_SUBJ_ID As New Guid("{8E4510C6-0043-4C08-96E8-75185E44485D}")
        Public ReadOnly CUSTOM_EMAIL_BODY_ID As New Guid("{7DA5D7E0-296C-4FA5-B33C-2FDBE9F46F7C}")
        ' D3580 ==

        'A1012 ==
        'A1041 ===
        Public ReadOnly ATTRIBUTE_HIERARCHY_ACTIVE_VIEW_ID As New Guid("{DAE62F9B-0E28-483D-A0DC-39385E2E810F}")
        Public ReadOnly ATTRIBUTE_HIERARCHY_ACTIVE_VIEW_NAME As String = "Hierarchy_active_view"
        'A1041 ===

        'A1086 ===
        Public ReadOnly ATTRIBUTE_MEASUREMENT_METHODS_MODE_ID As New Guid("{C7916B71-10F7-4234-B6FF-F6961DB7C4C3}") ' Show All/Objectives/Alternatives in the Measurement Methods HTML page
        Public Const ATTRIBUTE_MEASUREMENT_METHODS_MODE_NAME As String = "Measurement_PageMode"
        'A1086 ==
        'A1089 ===
        'Public ReadOnly ATTRIBUTE_EXPERT_MODE_ID As New Guid("{4BA3C7B6-618C-467E-BE3C-0416782FBA41}") ' Details mode for Measurement Methods and other pages
        'Public Const ATTRIBUTE_EXPERT_MODE_NAME As String = "PM_ExpertMode"
        'A1089 ==

        'A1101 ===
        Public ReadOnly ATTRIBUTE_DOLLAR_VALUE_ID As New Guid("{65E8EA2C-0122-4449-86AA-DF3CDE1DC9E8}")
        Public Const ATTRIBUTE_DOLLAR_VALUE_NAME As String = "Project_Goal_Cost"
        'A1101 ==
        'A1225 ===
        Public ReadOnly ATTRIBUTE_DOLLAR_VALUE_TARGET_ID As New Guid("{DF3E268B-C141-4769-B5B7-98FA849B01D9}")
        Public Const ATTRIBUTE_DOLLAR_VALUE_TARGET_NAME As String = "Project_Goal_Cost_Target"
        'A1225 ==
        'A1204 ===
        Public ReadOnly ATTRIBUTE_SHOW_DOLLAR_VALUE_ID As New Guid("{3AF1AE4F-8D37-4ADD-9B4C-CCD604D17384}")
        Public ReadOnly ATTRIBUTE_SHOW_DOLLAR_VALUE_NAME As String = "RiskResults_ShowCostOfGoal"
        'A1204 ==
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_ID_ID As New Guid("{7A34D33D-3D53-4CE6-BAEB-C0DFFCE3ACDE}") 'A1261
        'Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_ID_NAME As String = "Risk_show_event_id" 'A1261
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_DESCRIPTIONS_ID As New Guid("{4E3D2FCD-A192-408C-BAF2-5347D258B456}") 'A1263
        Public ReadOnly ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_DESCRIPTIONS_NAME As String = "Risk_show_event_descr" 'A1263
        'A1116 ===
        Public ReadOnly ATTRIBUTE_NAME_OF_ENTERPRISE_ID As New Guid("{27E5A21C-DDD6-43EE-84A0-24B2C3115677}")
        Public ReadOnly ATTRIBUTE_NAME_OF_ENTERPRISE_NAME As String = "Risk_NameOfEnterprise"
        'A1116 ==
        'A1236 Loss Exceedance Curve ===
        Public ReadOnly ATTRIBUTE_LEC_NUM_SIMULATIONS_ID As New Guid("{2774CA04-6CFA-444B-AEE0-973DD0C3E766}")
        Public ReadOnly ATTRIBUTE_LEC_NUM_SIMULATIONS_NAME As String = "LEC_NUM_SIM"
        Public ReadOnly ATTRIBUTE_LEC_NUM_DATAPOINTS_ID As New Guid("{A36AB3A9-49D6-457F-9176-9DB2F6A67264}")
        Public ReadOnly ATTRIBUTE_LEC_NUM_DATAPOINTS_NAME As String = "LEC_NUM_DP"
        Public ReadOnly ATTRIBUTE_LEC_CURVES_WITH_CONTROLS_SHOW_ID As New Guid("{59E098F2-7585-4D0B-ACE2-F431594A71FC}")
        Public ReadOnly ATTRIBUTE_LEC_CURVES_WITH_CONTROLS_SHOW_NAME As String = "LEC_NUM_SIM"
        Public ReadOnly ATTRIBUTE_LEC_EVENT_TYPE_ID As New Guid("{13C85768-3608-4701-9FDE-764C75B367F6}")  ' Independent (0) or Mutually Exclusive (1), Both (2)
        Public ReadOnly ATTRIBUTE_LEC_EVENT_TYPE_NAME As String = "LEC_Event_type"
        Public ReadOnly ATTRIBUTE_LEC_SOURCES_TYPE_ID As New Guid("{1DE67F02-9C64-4A36-BED8-BE824668AA5C}") 'A1350 - Independent (0) or Mutually Exclusive (1), Both (2)
        Public ReadOnly ATTRIBUTE_LEC_SOURCES_TYPE_NAME As String = "LEC_Sources_type" 'A1350
        'Public ReadOnly ATTRIBUTE_LEC_DISPLAY_MODE_ID As New Guid("{02D2717C-B836-43C3-B801-C4CC4377898B}")
        Public ReadOnly ATTRIBUTE_LEC_DISPLAY_MODE_NAME As String = "LEC_DISP_MODE"
        Public ReadOnly ATTRIBUTE_LEC_ZOOM_PLOT_ID As New Guid("{3F54F715-8141-4795-9368-1AB8A1AE043F}") 'A1254
        Public ReadOnly ATTRIBUTE_LEC_ZOOM_PLOT_NAME = "LEC_ZOOM" 'A1254
        Public ReadOnly ATTRIBUTE_LEC_RAND_SEED_ID As New Guid("{B0D27F67-1617-4BD8-AB0B-8F5A1FC9E92C}") 'A1255
        Public ReadOnly ATTRIBUTE_LEC_RAND_SEED_NAME = "LEC_RAND_SEED" 'A1255
        Public ReadOnly ATTRIBUTE_LEC_KEEP_RAND_SEED_ID As New Guid("{DE12520E-4FB7-459A-9045-79869396104E}") 'A1300
        Public ReadOnly ATTRIBUTE_LEC_KEEP_RAND_SEED_NAME = "LEC_KEEP_SEED" 'A1300
        Public ReadOnly ATTRIBUTE_LEC_RED_LINE_VALUE_ID As New Guid("{BAE0E3BC-DFDE-44EE-A9DC-A97D7899E6AB}") 'A1290
        Public ReadOnly ATTRIBUTE_LEC_RED_LINE_VALUE_NAME = "LEC_RED_LINE_VAL" 'A1290
        Public ReadOnly ATTRIBUTE_LEC_GREEN_LINE_VALUE_PRC_ID As New Guid("{40757844-D58B-48D5-874B-68D931372CC8}") 'A1332
        Public ReadOnly ATTRIBUTE_LEC_GREEN_LINE_VALUE_PRC_NAME = "LEC_GREEN_LINE_VAL_PRC" 'A1332
        'Public ReadOnly ATTRIBUTE_LEC_GREEN_LINE_VALUE_DOLL_ID As New Guid("{28256A78-F0A0-430C-BC75-77C8693D94C7}") 'A1344
        Public ReadOnly ATTRIBUTE_LEC_GREEN_LINE_VALUE_DOLL_NAME = "LEC_GREEN_LINE_VAL_DOLL" 'A1344
        'Public ReadOnly ATTRIBUTE_LEC_TRUNCATE_ID As New Guid("{EC00C862-C4B7-45CF-9286-7FA37AA706DD}") 'A1301 - OBSOLETE
        'Public ReadOnly ATTRIBUTE_LEC_TRUNCATE_NAME = "LEC_TRUNC" 'A1301
        Public ReadOnly ATTRIBUTE_LEC_SELECTED_CATEGORY_ID As New Guid("{545ED5F2-B693-4DB3-8F4F-67CFFF37A7E9}") 'A1302
        Public ReadOnly ATTRIBUTE_LEC_SELECTED_CATEGORY_NAME = "LEC_SEL_CATEGORY" 'A1302
        Public ReadOnly ATTRIBUTE_LEC_LIMIT_IMPACTS_100_ID As New Guid("{2BE9B9B5-73CD-4CA9-946D-2ECF030DC341}") 'A1302
        Public ReadOnly ATTRIBUTE_LEC_LIMIT_IMPACTS_100_NAME = "LEC_LIMIT_IMPACTS_100" 'A1302
        Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUPS_ENABLED_ID As New Guid("{F3421DF0-767A-4F0B-BE51-123D06ECFD3B}") 'A1303
        Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUPS_ENABLED_NAME = "LEC_GROUPS_ENABLED" 'A1303
        Public ReadOnly ATTRIBUTE_LEC_SOURCE_GROUPS_ENABLED_ID As New Guid("{825DE194-4ED7-48BF-8E46-670307ACE0F6}")
        Public ReadOnly ATTRIBUTE_LEC_SOURCE_GROUPS_ENABLED_NAME = "LEC_SOURCE_GROUPS_ENABLED"
        'Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUP_NAME_ID As New Guid("{CB63C94D-A789-41D7-87DA-0AE52DB17998}") 'A1303
        'Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUP_NAME_NAME = "LEC_EVENT_GROUP_NAME" 'A1303
        'Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUP_PRECEDENCE_ID As New Guid("{A30EDA88-6B9A-4C21-AAA6-D2D3C898F90B}") 'A1303
        'Public ReadOnly ATTRIBUTE_LEC_EVENT_EXCL_GROUP_PRECEDENCE_NAME = "LEC_EVENT_GROUP_PRECEDENCE" 'A1303
        Public ReadOnly ATTRIBUTE_LEC_SIMULATION_MODE_ID As New Guid("{DAA4A37E-E547-46DD-B6CC-BA6E94593036}") 'A1350
        Public ReadOnly ATTRIBUTE_LEC_SIMULATION_MODE_NAME = "LEC_SIM_MODE" 'A1350
        'Public ReadOnly ATTRIBUTE_LEC_ALLOW_EVENT_FIRE_MULTIPLE_TIMES_ID As New Guid("{75B844F2-B712-4710-BC26-9FD3796505B4}") 'A1362
        'Public ReadOnly ATTRIBUTE_LEC_ALLOW_EVENT_FIRE_MULTIPLE_TIMES_NAME = "LEC_ALLOW_EVENT_FIRE_MULTIPLE_TIMES" 'A1362
        'A1236 ==

        Public ReadOnly ATTRIBUTE_RISKION_CONSEQUENCES_CALC_ID As New Guid("{47811A2E-A16F-47A2-B9F1-6FEE2DC8903E}")
        Public ReadOnly ATTRIBUTE_RISKION_CONSEQUENCES_CALC_MODE_NAME As String = "RiskionConsequencesCalcMode"

        '' D3738 -D3741 ===
        'Public ReadOnly ATTRIBUTE_QUICKHELP_AUTOSHOW As New Guid("{EE5A0432-2C9F-4D8E-8C1F-05D1E3327D76}")
        'Public Const ATTRIBUTE_QUICKHELP_AUTOSHOW_NAME As String = "QH_AutoShow"
        '' D3738 -D3741 ==

        'A1126 ===
        Public ReadOnly ATTRIBUTE_EVALUATION_PROGRESS_SORT_ID As New Guid("{40256398-442F-4BC9-8503-B1C1C30F2D8D}")
        Public ReadOnly ATTRIBUTE_EVALUATION_PROGRESS_SORT_NAME As String = "EvalProgress_Sort"
        'A1126 ==
        'A1223 ===
        Public ReadOnly ATTRIBUTE_EVALUATION_PROGRESS_FILTER_BY_GROUP_ID As New Guid("{6625D92F-F4E5-4C24-BF91-1F906828DF6D}")
        Public ReadOnly ATTRIBUTE_EVALUATION_PROGRESS_FILTER_BY_GROUP_NAME As String = "EvalProgress_FltGroup"
        'A1223 ==

        'A1103 ===
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_EVENT_HISTORY_ID As New Guid("{88D6B7FC-B2EA-4FD4-80C5-0BEDBBE45478}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_EVENT_HISTORY_NAME As String = "%%Event%% history"
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_EVENT_RECOMMENDATIONS_ID As New Guid("{BEE3E2AC-0210-4D76-BA3F-D5365C56600A}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_EVENT_RECOMMENDATIONS_NAME As String = "%%Event%% recommendations"
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_OWNER_ID As New Guid("{14B36C39-B918-4FDD-9C62-9AFC15A3B623}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_OWNER_NAME As String = "Owner"
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_RISK_CATEGORIES_ID As New Guid("{D645ECF3-711D-40C2-9426-62B280242EE7}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_RISK_CATEGORIES_NAME As String = "%%Risk%% categories"
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_FUNCTIONAL_AREAS_ID As New Guid("{73409E50-F017-441A-A436-FDE57E591AEC}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_FUNCTIONAL_AREAS_NAME As String = "Functional areas"
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_STAKEHOLDERS_ID As New Guid("{5F354F5B-8CC8-4B8D-BAD4-9DAA4BB2339A}")
        Public ReadOnly ATTRIBUTE_RISK_REGISTER_STAKEHOLDERS_NAME As String = "Stakeholders"

        Public ReadOnly ATTRIBUTE_ALTERNATIVE_USER_RANK_ID As New Guid("{5E1C600D-489E-42E2-9B69-4C65D9D201B1}")    ' D6671
        Public Const ATTRIBUTE_ALTERNATIVE_USER_RANK_NAME As String = "AltUserRank" ' D6671

        Public ReadOnly DYNAMIC_ATTRIBUTE_GROUP_INCONSISTENCY_ID As New Guid("{1FEDB4F7-70A6-464F-8ED2-6FE54CED5334}") 'A1175
        Public ReadOnly DYNAMIC_ATTRIBUTE_GROUP_INCONSISTENCY_NAME As String = "User Inconsistency" 'A1175

        Public ReadOnly RiskRegisterAttributesIDs As Guid() = {ATTRIBUTE_RISK_REGISTER_EVENT_HISTORY_ID, ATTRIBUTE_RISK_REGISTER_EVENT_RECOMMENDATIONS_ID, ATTRIBUTE_RISK_REGISTER_OWNER_ID, ATTRIBUTE_RISK_REGISTER_RISK_CATEGORIES_ID, ATTRIBUTE_RISK_REGISTER_FUNCTIONAL_AREAS_ID, ATTRIBUTE_RISK_REGISTER_STAKEHOLDERS_ID}
        Public ReadOnly RiskRegisterAttributesNames As String() = {ATTRIBUTE_RISK_REGISTER_EVENT_HISTORY_NAME, ATTRIBUTE_RISK_REGISTER_EVENT_RECOMMENDATIONS_NAME, ATTRIBUTE_RISK_REGISTER_OWNER_NAME, ATTRIBUTE_RISK_REGISTER_RISK_CATEGORIES_NAME, ATTRIBUTE_RISK_REGISTER_FUNCTIONAL_AREAS_NAME, ATTRIBUTE_RISK_REGISTER_STAKEHOLDERS_NAME}
        'A1103 ==

        ' User Attributes A1314 ===
        Public ReadOnly ATTRIBUTE_USER_COLOR_ID As New Guid("{A0F6EC80-D4F0-40AA-818B-1C9545CD0C1D}")
        Public ReadOnly ATTRIBUTE_USER_COLOR_NAME As String = "User_Color"

        Public ReadOnly ATTRIBUTE_USER_PHONE_ID As New Guid("{695B66DC-1CB1-4C27-BB89-ECA4AD2C8879}")
        Public ReadOnly ATTRIBUTE_USER_PHONE_NAME As String = "Phone"

        'Public ReadOnly ATTRIBUTE_USER_VISITED_SURVEY_QUESTION_ID As New Guid("{DF304687-C3FC-445B-BB9B-0EC161D1CC9D}")
        'Public ReadOnly ATTRIBUTE_USER_VISITED_SURVEY_QUESTION_NAME As String = "UserVisitedSurveyQuestion"
        ' User Attributes ==

        Public ReadOnly ATTRIBUTE_ALTERNATIVE_PROS_ID As New Guid("{340D0E1E-5988-4F62-A426-5694CB30268C}")
        Public ReadOnly ATTRIBUTE_ALTERNATIVE_PROS_NAME As String = "Alt_Pros"

        Public ReadOnly ATTRIBUTE_ALTERNATIVE_CONS_ID As New Guid("{79327B0A-3FF8-494E-B696-AD8C3EA7BF3A}")
        Public ReadOnly ATTRIBUTE_ALTERNATIVE_CONS_NAME As String = "Alt_Pros"

        <Serializable()> Public Enum AttributeValueTypes
            avtString = 0
            avtBoolean = 1
            avtLong = 2
            avtDouble = 3
            avtEnumeration = 4
            avtEnumerationMulti = 5
        End Enum

        <Serializable()> Public Enum AttributeTypes
            atNode = 0
            atUser = 1
            atAlternative = 2
            atRatingScale = 3
            atImpact = 4 'A0760
            atLikelihood = 5     'A0767
            atControl = 6
            atConstraint = 7
            atRASettings = 8 'RA_AS2
            atRiskSettings = 9 'A0887
            atSynthesisSettings = 10 'A0940
            atProjectSettings = 11  ' D3580
        End Enum

        <Serializable()> Public Enum AttributesStorageType
            astXMLFile = 0
            astDatabase = 1
            astStreamsDatabase = 2
        End Enum

        <Serializable()> Public Class clsAttributeEnumerationItem
            Public Property ID As Guid
            Public Property Value As String

            Public Sub New()
                ID = Guid.NewGuid
            End Sub
        End Class

        <Serializable()> Public Class clsAttributeEnumeration
            Public Property ID As Guid
            Public Property Name As String = ""
            Public Property Items As New List(Of clsAttributeEnumerationItem)

            Public Function AddItem(Value As String) As clsAttributeEnumerationItem
                Dim newItem As New clsAttributeEnumerationItem
                newItem.Value = Value
                Items.Add(newItem)
                Return newItem
            End Function

            Public Function DeleteItem(ID As Guid) As Boolean
                Return Items.RemoveAll(Function(i) (i.ID.Equals(ID))) > 0
            End Function

            Public Function GetItemByID(ID As Guid) As clsAttributeEnumerationItem
                Return Items.FirstOrDefault(Function(i) (i.ID.Equals(ID)))
            End Function

            Public Function GetItemByValue(Value As String) As clsAttributeEnumerationItem
                Return Items.FirstOrDefault(Function(i) (i.Value.Trim.ToLower = Value.Trim.ToLower))
            End Function
        End Class

        <Serializable()> Public Class clsAttribute
            Public Property ID() As Guid
            Public Property Name() As String
            Public Property ValueType() As AttributeValueTypes
            Public Property Type() As AttributeTypes
            Public Property DefaultValue() As Object
            Public Property IsDefault() As Boolean
            Public Property EnumID As Guid
            Public Property DataMappingGUID As Guid 'AS/12323xf
            Public Property ResourceName As String = ""

            Public Sub New(ByVal ID As Guid, ByVal Name As String, ByVal Type As AttributeTypes, ByVal ValueType As AttributeValueTypes, Optional ByVal DefaultValue As Object = Nothing, Optional ByVal IsDefault As Boolean = False, Optional sResourceName As String = "") 'C1021
                Me.ID = ID
                Me.Name = Name
                Me.Type = Type
                Me.ValueType = ValueType
                Me.DefaultValue = DefaultValue
                Me.IsDefault = IsDefault
                Me.EnumID = Guid.Empty
                ResourceName = sResourceName
            End Sub
        End Class

        <Serializable()> Public Class clsAttributeValue
            Public Property AttributeID() As Guid
            Public Property UserID() As Integer
            Public Property ValueType() As AttributeValueTypes
            Public Property Value() As Object
            Public Property ObjectID() As Guid
            Public Property AdditionalID() As Guid

            Public Sub New(ByVal AttributeID As Guid, ByVal UserID As Integer, ByVal ValueType As AttributeValueTypes, ByVal Value As Object, ByVal ObjectID As Guid, AdditionalID As Guid)
                Me.AttributeID = AttributeID
                Me.UserID = UserID
                Me.ValueType = ValueType
                Me.Value = Value
                Me.ObjectID = ObjectID
                Me.AdditionalID = AdditionalID
            End Sub
        End Class

        <Serializable()> Public Class clsAttributes
            Public ReadOnly Property ProjectManager() As clsProjectManager
            Public Property AttributesList() As New List(Of clsAttribute)
            Public Property ValuesList() As New List(Of clsAttributeValue)
            Public Property Enumerations As New List(Of clsAttributeEnumeration)

            Public Function GetEnumByID(ID As Guid) As clsAttributeEnumeration
                Return Enumerations.FirstOrDefault(Function(e) (e.ID.Equals(ID)))
            End Function

            Public Function SetAttributeValue(ByVal AttributeID As Guid, ByVal UserID As Integer, ByVal ValueType As AttributeValueTypes, ByVal Value As Object, ByVal ObjectID As Guid, AdditionalID As Guid, Optional ApplyRules As Boolean = True) As Boolean
                Dim AttrExists As Boolean = False
                Dim Attr As clsAttribute = Nothing
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.ID.Equals(AttributeID) Then
                        AttrExists = True
                        Attr = Attribute
                        Exit For
                    End If
                Next

                If Not AttrExists Then Return False

                Dim updated As Boolean = False
                Dim index As Integer = -1
                For Each AttrValue As clsAttributeValue In ValuesList
                    If AttrValue.AttributeID.Equals(AttributeID) AndAlso AttrValue.UserID = UserID AndAlso AttrValue.ObjectID.Equals(ObjectID) AndAlso AttrValue.AdditionalID.Equals(AdditionalID) Then
                        'If Attr.ValueType <> AttributeValueTypes.avtEnumerationMulti Or Value = Nothing Then
                        If Not IsNothing(Value) Then 'AS/16001 enclosed
                            AttrValue.Value = Value
                        End If 'AS/16001
                        updated = True
                        index = ValuesList.IndexOf(AttrValue)
                        'End If
                    End If
                Next

                If updated And (Value Is Nothing OrElse (Attr.ValueType = AttributeValueTypes.avtString AndAlso String.IsNullOrEmpty(Value))) Then 'A1000
                    ValuesList.RemoveAt(index)
                End If

                If Not updated And Value IsNot Nothing Then
                    If Not (Attr.ValueType = AttributeValueTypes.avtString AndAlso String.IsNullOrEmpty(Value)) Then 'A1000
                        Dim NewValue As New clsAttributeValue(AttributeID, UserID, ValueType, Value, ObjectID, AdditionalID)
                        ValuesList.Add(NewValue)
                    End If
                    updated = True
                End If

                If ApplyRules AndAlso Attr.Type = AttributeTypes.atUser Then
                    ProjectManager.CombinedGroups.ApplyRules()
                End If

                Return updated
            End Function

            Public Sub SetAttributeValue(tAlt As clsNode, tAttr As clsAttribute, sAttrVal As String, ByRef fAttrChanged As Boolean)
                Select Case tAttr.ValueType
                    Case AttributeValueTypes.avtString
                        If CStr(GetAttributeValue(tAttr.ID, tAlt.NodeGuidID, Guid.Empty)) <> sAttrVal Then
                            SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtString, sAttrVal, tAlt.NodeGuidID, Guid.Empty)
                            fAttrChanged = True
                        End If
                    Case AttributeValueTypes.avtDouble
                        Dim tValue As Double
                        If ExpertChoice.Service.StringFuncs.String2Double(sAttrVal, tValue) AndAlso CDbl(GetAttributeValue(tAttr.ID, tAlt.NodeGuidID, Guid.Empty)) <> tValue Then
                            SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtDouble, tValue, tAlt.NodeGuidID, Guid.Empty)
                            fAttrChanged = True
                        End If
                    Case AttributeValueTypes.avtLong
                        Dim tValue As Long
                        If Long.TryParse(sAttrVal, tValue) AndAlso CLng(GetAttributeValue(tAttr.ID, tAlt.NodeGuidID, Guid.Empty)) <> tValue Then
                            SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtLong, tValue, tAlt.NodeGuidID, Guid.Empty)
                            fAttrChanged = True
                        End If
                    Case AttributeValueTypes.avtBoolean
                        If CBool(GetAttributeValue(tAttr.ID, tAlt.NodeGuidID, Guid.Empty)) <> ExpertChoice.Service.StringFuncs.Str2Bool(sAttrVal) Then
                            SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtBoolean, ExpertChoice.Service.StringFuncs.Str2Bool(sAttrVal), tAlt.NodeGuidID, Guid.Empty)
                            fAttrChanged = True
                        End If
                    Case AttributeValueTypes.avtEnumeration
                        Dim tValue As Object = Nothing
                        Dim resGuid As Guid = Guid.Empty
                        Dim valGuid As Guid = Guid.Empty
                        Dim tAttrVal As Object = GetAttributeValue(tAttr.ID, tAlt.NodeGuidID, Guid.Empty)   ' D7070
                        If sAttrVal = "null" OrElse sAttrVal = "" OrElse (Guid.TryParse(sAttrVal, resGuid) AndAlso (tAttrVal Is Nothing OrElse Guid.TryParse(tAttrVal?.ToString, valGuid)) AndAlso Not valGuid.Equals(resGuid)) Then   ' D7069 + D7070
                            tValue = resGuid
                            SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtEnumeration, tValue, tAlt.NodeGuidID, Guid.Empty)
                            fAttrChanged = True
                        End If
                    Case AttributeValueTypes.avtEnumerationMulti
                        If SetAttributeValue(tAttr.ID, UNDEFINED_USER_ID, AttributeValueTypes.avtEnumerationMulti, sAttrVal, tAlt.NodeGuidID, Guid.Empty) Then
                            fAttrChanged = True
                        End If
                End Select
            End Sub

            Public Function DeleteMapkeyForAlternative(ByVal altGUID As Guid) As Boolean 'AS/14611
                Dim AttrExists As Boolean = False
                Dim Attr As clsAttribute = Nothing
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.ID.Equals(ATTRIBUTE_MAPKEY_ID) Then
                        AttrExists = True
                        Attr = Attribute
                        Exit For
                    End If
                Next

                If Not AttrExists Then Return False

                Dim rv As Boolean = False
                Dim index As Integer = -1
                For Each AttrValue As clsAttributeValue In ValuesList
                    If AttrValue.AttributeID.Equals(ATTRIBUTE_MAPKEY_ID) And AttrValue.UserID = UNDEFINED_USER_ID And AttrValue.ObjectID.Equals(altGUID) And AttrValue.AdditionalID.Equals(Guid.Empty) Then
                        index = ValuesList.IndexOf(AttrValue)
                        rv = True
                        Exit For
                    End If
                Next

                If rv Then
                    ValuesList.RemoveAt(index)
                End If

                Return rv
            End Function

            Public Function GetAttributeByID(ByVal AttributeID As Guid) As clsAttribute
                Return AttributesList.FirstOrDefault(Function(a) (a.ID.Equals(AttributeID)))
            End Function

            Public Overloads Function GetAttributeValue(ByVal AttributeID As Guid, ByVal UserID As Integer) As Object
                Dim Attribute As clsAttribute = GetAttributeByID(AttributeID)
                If Attribute Is Nothing Then Return Nothing

                For Each AttrValue As clsAttributeValue In ValuesList
                    If AttrValue.AttributeID.Equals(AttributeID) AndAlso AttrValue.UserID = UserID AndAlso Not (Attribute.ValueType = AttributeValueTypes.avtString AndAlso String.IsNullOrEmpty(AttrValue.Value)) Then
                        If Attribute.ValueType = AttributeValueTypes.avtString Then
                            Return AttrValue.Value.Trim(CChar(";")).Trim(CChar(""""))
                        Else
                            Return AttrValue.Value
                        End If

                    End If
                Next

                Return Attribute.DefaultValue
            End Function

            Public Function IsValueSet(ByVal AttributeID As Guid, ByVal ObjectID As Guid) As Boolean
                Dim Attribute As clsAttribute = GetAttributeByID(AttributeID)
                If Attribute Is Nothing Then Return False
                Return ValuesList.Exists(Function(v) (v.AttributeID.Equals(AttributeID) AndAlso v.ObjectID = ObjectID))
            End Function

            Public Overloads Function GetAttributeValue(ByVal AttributeID As Guid, ByVal ObjectID As Guid, Optional Attribute As clsAttribute = Nothing, Optional UserID As Integer = UNDEFINED_USER_ID) As Object
                If Attribute Is Nothing Then Attribute = GetAttributeByID(AttributeID)

                If Attribute Is Nothing Then Return Nothing

                For Each AttrValue As clsAttributeValue In ValuesList
                    If AttrValue.AttributeID.Equals(AttributeID) AndAlso AttrValue.ObjectID = ObjectID AndAlso Not (Attribute.ValueType = AttributeValueTypes.avtString AndAlso String.IsNullOrEmpty(AttrValue.Value)) AndAlso UserID = AttrValue.UserID Then 'A01000
                        'A0958 ===
                        If Attribute.ValueType = AttributeValueTypes.avtEnumeration Then
                            If Not Attribute.EnumID.Equals(Guid.Empty) Then
                                Dim tEnum As clsAttributeEnumeration = GetEnumByID(Attribute.EnumID)
                                If tEnum IsNot Nothing AndAlso tEnum.GetItemByID(AttrValue.Value) Is Nothing Then
                                    Dim tDefaultValue As Guid
                                    If TypeOf Attribute.DefaultValue Is Guid Then tDefaultValue = Attribute.DefaultValue
                                    If TypeOf Attribute.DefaultValue Is String AndAlso Not String.IsNullOrWhiteSpace(CStr(Attribute.DefaultValue)) Then tDefaultValue = New Guid(CStr(Attribute.DefaultValue))
                                    Return tDefaultValue
                                End If
                            End If
                            Return AttrValue.Value 'AS/12323xy 
                        End If
                        'A0958 ==
                        Return AttrValue.Value
                    End If
                Next

                Dim PipeParameters As Canvas.clsPipeParamaters = ProjectManager.PipeParameters

                If AttributeID.Equals(ATTRIBUTE_EVALUATE_DIAGONALS_MODE_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node Is Nothing Then node = ProjectManager.ActiveAlternatives.GetNodeByID(ObjectID) ' event with no sources
                    If node IsNot Nothing Then
                        If node.IsTerminalNode OrElse node.IsAlternative Then
                            If PipeParameters.ForceAllDiagonalsForAlternatives And (ProjectManager.PipeBuilder.GetNodesBelowForPipe(node).Count < PipeParameters.ForceAllDiagonalsLimitForAlternatives) Then
                                Return DiagonalsEvaluation.deAll
                            Else
                                Return PipeParameters.EvaluateDiagonalsAlternatives
                            End If
                        Else
                            If PipeParameters.ForceAllDiagonals And (ProjectManager.PipeBuilder.GetNodesBelowForPipe(node).Count < PipeParameters.ForceAllDiagonalsLimit) Then
                                Return DiagonalsEvaluation.deAll
                            Else
                                Return PipeParameters.EvaluateDiagonals
                            End If
                        End If
                    End If
                End If

                If AttributeID.Equals(ATTRIBUTE_PAIRWISE_TYPE_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node Is Nothing Then node = ProjectManager.ActiveAlternatives.GetNodeByID(ObjectID) ' event with no sources
                    If node IsNot Nothing Then
                        If node.IsTerminalNode OrElse node.IsAlternative Then
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.PairwiseTypeForAlternatives
                            Return ProjectManager.PipeParameters.PairwiseTypeForAlternatives
                        Else
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.PairwiseType
                            Return ProjectManager.PipeParameters.PairwiseType
                        End If
                    End If
                End If

                'A1088 ===
                If AttributeID.Equals(ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node Is Nothing Then node = ProjectManager.ActiveAlternatives.GetNodeByID(ObjectID) ' event with no sources
                    If node IsNot Nothing Then
                        If node.IsTerminalNode OrElse node.IsAlternative Then
                            Return ProjectManager.PipeParameters.ForceGraphicalForAlternatives
                        Else
                            Return ProjectManager.PipeParameters.ForceGraphical
                        End If
                    End If
                End If
                'A1088 ==

                If AttributeID.Equals(ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node Is Nothing Then node = ProjectManager.ActiveAlternatives.GetNodeByID(ObjectID) ' event with no sources
                    If node IsNot Nothing Then
                        If node.IsTerminalNode OrElse node.IsAlternative Then
                            Return If(ProjectManager.PipeParameters.AlternativesPairwiseOneAtATime, 1, 0)
                        Else
                            Return If(ProjectManager.PipeParameters.ObjectivesPairwiseOneAtATime, 1, 0)
                        End If
                    End If
                End If

                If AttributeID.Equals(ATTRIBUTE_RA_ALT_SORT_ID) Then
                    Dim alt As clsNode = ProjectManager.ActiveAlternatives.GetNodeByID(ObjectID)
                    If alt IsNot Nothing Then
                        Return alt.NodeID
                    End If
                End If

                If Attribute.ValueType = AttributeValueTypes.avtEnumeration AndAlso TypeOf Attribute.DefaultValue Is String AndAlso Not String.IsNullOrWhiteSpace(CStr(Attribute.DefaultValue)) Then Return New Guid(CStr(Attribute.DefaultValue)) 'A0906

                Return Attribute.DefaultValue
            End Function

            Public Function GetAttributeValueString(ByVal AttributeID As Guid, ByVal ObjectID As Guid, Optional ByVal UserIDforUserAttributes As Integer = Integer.MinValue) As String
                Dim tAttr As clsAttribute = GetAttributeByID(AttributeID)
                Dim tValue As Object = Nothing
                If UserIDforUserAttributes = Integer.MinValue Then
                    tValue = GetAttributeValue(AttributeID, ObjectID)
                Else
                    tValue = GetAttributeValue(AttributeID, UserIDforUserAttributes)
                End If
                Dim sValue As String = ""

                Select Case tAttr.ValueType
                    Case AttributeValueTypes.avtString
                        sValue = CStr(tValue)
                    Case AttributeValueTypes.avtBoolean
                        If tValue IsNot Nothing Then
                            Try 'AS/12323xy incorporated Try-Catch
                                sValue = CStr(IIf(CBool(tValue), "Yes", "No"))
                            Catch ex As Exception
                                'MsgBox(ex.Message)
                                sValue = CStr(IIf(CBool(tAttr.DefaultValue), "Yes", "No")) 'AS/12323xy
                            End Try
                        End If
                    Case AttributeValueTypes.avtEnumeration
                        If tValue IsNot Nothing Then
                            Dim itemID As Guid = Guid.Empty
                            If TypeOf (tValue) Is String AndAlso CStr(tValue).Length = 36 Then itemID = New Guid(CStr(tValue))
                            If TypeOf (tValue) Is Guid Then itemID = CType(tValue, Guid)
                            Dim tVals As clsAttributeEnumeration = GetEnumByID(tAttr.EnumID)
                            If tVals IsNot Nothing Then
                                Dim tVal As clsAttributeEnumerationItem = tVals.GetItemByID(itemID)
                                If tVal IsNot Nothing Then sValue = tVal.Value
                            End If
                        End If
                    Case AttributeValueTypes.avtEnumerationMulti
                        Dim tVals As clsAttributeEnumeration = GetEnumByID(tAttr.EnumID)
                        If tVals IsNot Nothing AndAlso tValue IsNot Nothing Then
                            Dim lst As String() = CStr(tValue).Split(CChar(";"))
                            For k As Integer = 0 To lst.Length - 1
                                Dim sGuid As String = CStr(lst(k)).Trim
                                Dim guidHash As New HashSet(Of Guid)
                                If Not String.IsNullOrEmpty(sGuid) AndAlso sGuid.Length = 36 Then
                                    Dim itemID As Guid = New Guid(sGuid)
                                    If Not guidHash.Contains(itemID) Then 
                                        Dim tVal As clsAttributeEnumerationItem = tVals.GetItemByID(itemID)
                                        If tVal IsNot Nothing Then
                                            guidHash.Add(itemID)
                                            sValue += CStr(If(sValue = "", "", ", ")) + tVal.Value
                                        End If
                                    End If
                                End If
                            Next
                        End If
                    Case Else 'avtDouble, avtLong 'AS/12323xz===
                        If tValue IsNot Nothing Then
                            sValue = CStr(tValue)
                        End If 'AS/12323xz==
                End Select

                Return sValue
            End Function

            Public Overloads Function GetAttributeValue(ByVal AttributeID As Guid, ByVal ObjectID As Guid, AdditionalID As Guid) As Object
                Dim Attribute As clsAttribute = GetAttributeByID(AttributeID)

                If Attribute Is Nothing Then Return Nothing

                For Each AttrValue As clsAttributeValue In ValuesList
                    If AttrValue.AttributeID.Equals(AttributeID) AndAlso AttrValue.ObjectID = ObjectID AndAlso AttrValue.AdditionalID = AdditionalID AndAlso Not (Attribute.ValueType = AttributeValueTypes.avtString AndAlso String.IsNullOrEmpty(AttrValue.Value)) Then 'A1000
                        Return AttrValue.Value
                    End If
                Next

                If AttributeID.Equals(ATTRIBUTE_EVALUATE_DIAGONALS_MODE_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node IsNot Nothing Then
                        If node.IsTerminalNode Then
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.EvaluateDiagonalsAlternatives
                            Return ProjectManager.PipeParameters.EvaluateDiagonalsAlternatives
                        Else
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.EvaluateDiagonals
                            Return ProjectManager.PipeParameters.EvaluateDiagonals
                        End If
                    End If
                End If

                If AttributeID.Equals(ATTRIBUTE_PAIRWISE_TYPE_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node IsNot Nothing Then
                        If node.IsTerminalNode Then
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.PairwiseTypeForAlternatives
                            Return ProjectManager.PipeParameters.PairwiseTypeForAlternatives
                        Else
                            'Attribute.DefaultValue = ProjectManager.PipeParameters.PairwiseType
                            Return ProjectManager.PipeParameters.PairwiseType
                        End If
                    End If
                End If

                'A1088 ===
                If AttributeID.Equals(ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_ID) Then
                    Dim node As clsNode = ProjectManager.ActiveObjectives.GetNodeByID(ObjectID)
                    If node IsNot Nothing Then
                        If node.IsTerminalNode Then
                            Return ProjectManager.PipeParameters.ForceGraphicalForAlternatives
                        Else
                            Return ProjectManager.PipeParameters.ForceGraphical
                        End If
                    End If
                End If
                'A1088 ==

                Return Attribute.DefaultValue
            End Function

            Public Function AddAttribute(ByVal ID As Guid, ByVal Name As String, ByVal Type As AttributeTypes, ByVal ValueType As AttributeValueTypes, Optional ByVal DefaultValue As Object = Nothing, Optional ByVal IsDefault As Boolean = False, Optional EnumID As Guid = Nothing, Optional sResourceName As String = "") As clsAttribute 'C1021
                Dim Attribute As clsAttribute = GetAttributeByID(ID)
                If Attribute IsNot Nothing Then
                    If IsDefault AndAlso sResourceName <> "" AndAlso Attribute.ResourceName = "" Then
                        Attribute.ResourceName = sResourceName
                    End If
                    Return Attribute
                End If

                Dim NewAttribute As New clsAttribute(ID, Name, Type, ValueType, DefaultValue, IsDefault, sResourceName) 'C1021                
                NewAttribute.EnumID = EnumID
                AttributesList.Add(NewAttribute)
                Return NewAttribute
            End Function

            Public Sub RemoveAttribute(ByVal ID As Guid)
                Dim Attribute As clsAttribute = GetAttributeByID(ID)

                If Attribute IsNot Nothing Then
                    AttributesList.Remove(Attribute)
                    ValuesList.RemoveAll(Function(v) (v.AttributeID = Attribute.ID))
                End If
            End Sub

            Public Function GetNodeAttributes() As List(Of clsAttribute)
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atNode Then
                        res.Add(Attribute)
                    End If
                Next
                Return res
            End Function

            Public Function GetAlternativesAttributes(Optional NonDefaultAttributesOnly As Boolean = False) As List(Of clsAttribute) 'A0957
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atAlternative AndAlso (Not Attribute.IsDefault OrElse Not NonDefaultAttributesOnly) Then 'A0957
                        res.Add(Attribute)
                    End If
                Next
                Return res
            End Function

            'A1224 ===
            Public Function IsAltAttrVisibleInReport(ID As Guid, PM As clsProjectManager) As Boolean
                Return ID <> ATTRIBUTE_DEFAULT_BRUSH_COLOR_ID And ID <> ATTRIBUTE_RA_ALT_SORT_ID And (ID <> ATTRIBUTE_KNOWN_VALUE_ID Or PM.IsRiskProject) And ID <> ATTRIBUTE_ALTERNAITVE_FUNDED_IN_CURRENT_SCENARIO_ID And ID <> ATTRIBUTE_RESULTS_ALTERNATIVE_IS_SELECTED_ID And ID <> ATTRIBUTE_IS_STRUCTURAL_ADJUST_NODE_ID And ID <> ATTRIBUTE_NODE_SYNTHESIS_TYPE_ID 'A1240 + A1241
            End Function
            'A1224 ==

            Public Function GetControlsAttributes(Optional NonDefaultAttributesOnly As Boolean = False, Optional onlyAttributesOfType As Boolean =  False, Optional attributeType As AttributeValueTypes = AttributeValueTypes.avtEnumeration) As List(Of clsAttribute)
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atControl AndAlso (Not Attribute.IsDefault OrElse Not NonDefaultAttributesOnly) Then
                        If Not onlyAttributesOfType OrElse Attribute.ValueType = attributeType Then
                            res.Add(Attribute)
                        End If
                    End If
                Next
                Return res
            End Function

            Public Function GetImpactAttributes() As List(Of clsAttribute) 'A0777
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atImpact Then
                        res.Add(Attribute)
                    End If
                Next
                Return res
            End Function

            Public Function GetLikelihodAttributes() As List(Of clsAttribute) 'A0777
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atLikelihood Then
                        res.Add(Attribute)
                    End If
                Next
                Return res
            End Function

            Public Function GetUserAttributes() As List(Of clsAttribute)
                Dim res As New List(Of clsAttribute)
                For Each Attribute As clsAttribute In AttributesList
                    If Attribute.Type = AttributeTypes.atUser Then
                        res.Add(Attribute)
                    End If
                Next
                Return res
            End Function

            Public Function GetObjectAttributesValues(AlternativeID As Guid) As List(Of clsAttributeValue)
                Dim res As New List(Of clsAttributeValue)
                For Each value As clsAttributeValue In ValuesList
                    If value.ObjectID = AlternativeID Then
                        res.Add(value)
                    End If
                Next
                Return res
            End Function

            Public Function GetAttributesValues(AttributeID As Guid) As List(Of clsAttributeValue) 'AS/21354b
                Return GetAttributesValues(AttributeTypes.atAlternative, AttributeID)
            End Function

            Private Function GetAttributesValues(AttributeType As AttributeTypes, AttributeID As Guid) As List(Of clsAttributeValue)
                Dim attr As clsAttribute = GetAttributeByID(AttributeID)
                If attr Is Nothing Then Return Nothing
                If attr.Type <> AttributeType Then Return Nothing

                Dim res As New List(Of clsAttributeValue)
                For Each value As clsAttributeValue In ValuesList
                    If (value.UserID = UNDEFINED_USER_ID) And (value.AttributeID = AttributeID) Then
                        res.Add(value)
                    End If
                Next
                Return res
            End Function

            Public Function GetNodesAttributesValues(AttributeID As Guid) As List(Of clsAttributeValue)
                Return GetAttributesValues(AttributeTypes.atNode, AttributeID)
            End Function

            Public Overloads Function GetUserAttributeValues(ByVal UserID As Integer) As List(Of clsAttributeValue)
                Dim res As New List(Of clsAttributeValue)
                For Each value As clsAttributeValue In ValuesList
                    If value.UserID = UserID Then
                        res.Add(value)
                    End If
                Next
                Return res
            End Function

            Private Function WriteAttributesStream() As MemoryStream
                If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 19 Then
                    Return WriteAttributesStream_1_1_19()
                Else
                    If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 43 Then
                        Return WriteAttributesStream_1_1_20()
                    Else
                        Return WriteAttributesStream_1_1_44()
                    End If
                End If
            End Function

            Private Function WriteAttributesStream_1_1_44() As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                BW.Write(AttributesList.Count)

                Dim hasDefaulValue As Boolean
                For Each Attribute As clsAttribute In AttributesList
                    BW.Write(Attribute.ID.ToByteArray)
                    BW.Write(Attribute.Name)
                    BW.Write(CInt(Attribute.Type))
                    BW.Write(CInt(Attribute.ValueType))
                    BW.Write(Attribute.EnumID.ToByteArray)
                    BW.Write(Attribute.IsDefault) 'C1021
                    hasDefaulValue = Attribute.DefaultValue IsNot Nothing
                    BW.Write(hasDefaulValue)
                    BW.Write(Attribute.DataMappingGUID.ToByteArray)
                    If hasDefaulValue Then
                        Select Case Attribute.ValueType
                            Case AttributeValueTypes.avtBoolean
                                BW.Write(CBool(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtDouble
                                BW.Write(CDbl(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtLong
                                BW.Write(CLng(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                BW.Write(CStr(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtEnumeration
                                If Attribute.DefaultValue Is Nothing Then
                                    BW.Write(UNDEFINED_STRING_VALUE)
                                Else
                                    BW.Write(Attribute.DefaultValue.ToString)
                                End If
                        End Select
                    End If
                Next

                BW.Write(Enumerations.Count)
                For Each E As clsAttributeEnumeration In Enumerations
                    BW.Write(E.ID.ToByteArray)
                    BW.Write(E.Name)
                    BW.Write(E.Items.Count)
                    For Each eItem As clsAttributeEnumerationItem In E.Items
                        BW.Write(eItem.ID.ToByteArray)
                        BW.Write(eItem.Value)
                    Next
                Next

                BW.Close()

                Return MS
            End Function

            Private Function WriteAttributesStream_1_1_20() As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                BW.Write(AttributesList.Count)

                Dim hasDefaulValue As Boolean
                For Each Attribute As clsAttribute In AttributesList
                    BW.Write(Attribute.ID.ToByteArray)
                    BW.Write(Attribute.Name)
                    BW.Write(CInt(Attribute.Type))
                    BW.Write(CInt(Attribute.ValueType))
                    BW.Write(Attribute.EnumID.ToByteArray)
                    BW.Write(Attribute.IsDefault) 'C1021
                    hasDefaulValue = Attribute.DefaultValue IsNot Nothing
                    BW.Write(hasDefaulValue)
                    If hasDefaulValue Then
                        Select Case Attribute.ValueType
                            Case AttributeValueTypes.avtBoolean
                                BW.Write(CBool(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtDouble
                                BW.Write(CDbl(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtLong
                                BW.Write(CLng(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                BW.Write(CStr(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtEnumeration
                                If Attribute.DefaultValue Is Nothing Then
                                    BW.Write(UNDEFINED_STRING_VALUE)
                                Else
                                    BW.Write(Attribute.DefaultValue.ToString)
                                End If
                        End Select
                    End If
                Next

                BW.Write(Enumerations.Count)
                For Each E As clsAttributeEnumeration In Enumerations
                    BW.Write(E.ID.ToByteArray)
                    BW.Write(E.Name)
                    BW.Write(E.Items.Count)
                    For Each eItem As clsAttributeEnumerationItem In E.Items
                        BW.Write(eItem.ID.ToByteArray)
                        BW.Write(eItem.Value)
                    Next
                Next

                BW.Close()

                Return MS
            End Function

            Private Function WriteAttributesStream_1_1_19() As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                BW.Write(AttributesList.Count)

                Dim hasDefaulValue As Boolean
                For Each Attribute As clsAttribute In AttributesList
                    BW.Write(Attribute.ID.ToByteArray)
                    BW.Write(Attribute.Name)
                    BW.Write(CInt(Attribute.Type))
                    BW.Write(CInt(Attribute.ValueType))
                    BW.Write(Attribute.IsDefault) 'C1021
                    hasDefaulValue = Attribute.DefaultValue IsNot Nothing
                    BW.Write(hasDefaulValue)
                    If hasDefaulValue Then
                        Select Case Attribute.ValueType
                            Case AttributeValueTypes.avtBoolean
                                BW.Write(CBool(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtDouble
                                BW.Write(CDbl(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtLong
                                BW.Write(CLng(Attribute.DefaultValue))
                            Case AttributeValueTypes.avtString
                                BW.Write(CStr(Attribute.DefaultValue))
                        End Select
                    End If
                Next

                BW.Close()

                Return MS
            End Function

            Private Function ReadAttributesStream(ByVal Stream As MemoryStream) As Boolean
                If Stream.Length > 0 Then   ' D4838 + D4840
                    If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 19 Then
                        Return ReadAttributesStream_1_1_19(Stream)
                    Else
                        If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 43 Then
                            Return ReadAttributesStream_1_1_20(Stream)
                        Else
                            Return ReadAttributesStream_1_1_44(Stream)
                        End If
                    End If
                End If
                Return False    ' D4838
            End Function

            Private Function ReadAttributesStream_1_1_44(ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim Name As String
                Dim Type As AttributeTypes
                Dim ValueType As AttributeValueTypes
                Dim enumID As Guid
                Dim IsDefault As Boolean 'C1021
                Dim HasDefaultValue As Boolean
                Dim DefaultValue As Object = Nothing
                Dim DataMappingGuidID As Guid

                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    Name = BR.ReadString
                    Type = CType(BR.ReadInt32, AttributeTypes)
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    enumID = New Guid(BR.ReadBytes(16))
                    IsDefault = BR.ReadBoolean 'C1021
                    HasDefaultValue = BR.ReadBoolean
                    DataMappingGuidID = New Guid(BR.ReadBytes(16))
                    If HasDefaultValue Then
                        Select Case ValueType
                            Case AttributeValueTypes.avtBoolean
                                DefaultValue = BR.ReadBoolean
                            Case AttributeValueTypes.avtDouble
                                DefaultValue = BR.ReadDouble
                            Case AttributeValueTypes.avtLong
                                DefaultValue = BR.ReadInt64
                            Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                DefaultValue = BR.ReadString
                            Case AttributeValueTypes.avtEnumeration
                                DefaultValue = BR.ReadString
                                If DefaultValue = UNDEFINED_STRING_VALUE Then
                                    DefaultValue = Nothing
                                    HasDefaultValue = False
                                End If
                        End Select
                    Else
                        DefaultValue = Nothing
                    End If

                    'Dim NewAttribute As New clsAttribute(ID, Name, Type, ValueType, DefaultValue) 'C1021
                    'AttributesList.Add(NewAttribute) 'C1021
                    Dim a As clsAttribute = AddAttribute(ID, Name, Type, ValueType, DefaultValue, IsDefault, enumID) 'C1021
                    a.DataMappingGUID = DataMappingGuidID
                Next

                Enumerations.Clear()

                count = BR.ReadInt32
                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    Name = BR.ReadString

                    Dim E As New clsAttributeEnumeration()
                    E.ID = ID
                    E.Name = Name

                    Dim itemCount As Integer = BR.ReadInt32

                    Dim iID As Guid
                    Dim iValue As String
                    Dim aItem As clsAttributeEnumerationItem

                    For j As Integer = 1 To itemCount
                        iID = New Guid(BR.ReadBytes(16))
                        iValue = BR.ReadString

                        aItem = E.AddItem(iValue)
                        aItem.ID = iID
                    Next

                    Enumerations.Add(E)
                Next

                BR.Close()

                Return True
            End Function

            Private Function ReadAttributesStream_1_1_20(ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim Name As String
                Dim Type As AttributeTypes
                Dim ValueType As AttributeValueTypes
                Dim enumID As Guid
                Dim IsDefault As Boolean 'C1021
                Dim HasDefaultValue As Boolean
                Dim DefaultValue As Object = Nothing

                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    Name = BR.ReadString
                    Type = CType(BR.ReadInt32, AttributeTypes)
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    enumID = New Guid(BR.ReadBytes(16))
                    IsDefault = BR.ReadBoolean 'C1021
                    HasDefaultValue = BR.ReadBoolean
                    If HasDefaultValue Then
                        Select Case ValueType
                            Case AttributeValueTypes.avtBoolean
                                DefaultValue = BR.ReadBoolean
                            Case AttributeValueTypes.avtDouble
                                DefaultValue = BR.ReadDouble
                            Case AttributeValueTypes.avtLong
                                DefaultValue = BR.ReadInt64
                            Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                DefaultValue = BR.ReadString
                            Case AttributeValueTypes.avtEnumeration
                                DefaultValue = BR.ReadString
                                If DefaultValue = UNDEFINED_STRING_VALUE Then
                                    DefaultValue = Nothing
                                    HasDefaultValue = False
                                End If
                        End Select
                    Else
                        DefaultValue = Nothing
                    End If

                    'Dim NewAttribute As New clsAttribute(ID, Name, Type, ValueType, DefaultValue) 'C1021
                    'AttributesList.Add(NewAttribute) 'C1021
                    AddAttribute(ID, Name, Type, ValueType, DefaultValue, IsDefault, enumID) 'C1021
                Next

                Enumerations.Clear()

                count = BR.ReadInt32
                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    Name = BR.ReadString

                    Dim E As New clsAttributeEnumeration()
                    E.ID = ID
                    E.Name = Name

                    Dim itemCount As Integer = BR.ReadInt32

                    Dim iID As Guid
                    Dim iValue As String
                    Dim aItem As clsAttributeEnumerationItem

                    For j As Integer = 1 To itemCount
                        iID = New Guid(BR.ReadBytes(16))
                        iValue = BR.ReadString

                        aItem = E.AddItem(iValue)
                        aItem.ID = iID
                    Next

                    Enumerations.Add(E)
                Next

                BR.Close()

                Return True
            End Function

            Private Function ReadAttributesStream_1_1_19(ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim Name As String
                Dim Type As AttributeTypes
                Dim ValueType As AttributeValueTypes
                Dim IsDefault As Boolean 'C1021
                Dim HasDefaultValue As Boolean
                Dim DefaultValue As Object = Nothing

                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    Name = BR.ReadString
                    Type = CType(BR.ReadInt32, AttributeTypes)
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    IsDefault = BR.ReadBoolean 'C1021
                    HasDefaultValue = BR.ReadBoolean
                    If HasDefaultValue Then
                        Select Case ValueType
                            Case AttributeValueTypes.avtBoolean
                                DefaultValue = BR.ReadBoolean
                            Case AttributeValueTypes.avtDouble
                                DefaultValue = BR.ReadDouble
                            Case AttributeValueTypes.avtLong
                                DefaultValue = BR.ReadInt64
                            Case AttributeValueTypes.avtString
                                DefaultValue = BR.ReadString
                        End Select
                    Else
                        DefaultValue = Nothing
                    End If

                    'Dim NewAttribute As New clsAttribute(ID, Name, Type, ValueType, DefaultValue) 'C1021
                    'AttributesList.Add(NewAttribute) 'C1021
                    AddAttribute(ID, Name, Type, ValueType, DefaultValue, IsDefault) 'C1021
                Next

                BR.Close()

                Return True
            End Function

            Private Function WriteAttributes_CanvasStreamDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer) As Boolean
                Dim MS As MemoryStream = WriteAttributesStream()
                Dim res = ProjectManager.StorageManager.Writer.SaveModelStructureStream(StructureType.stAttributes, MS)
                Return res
            End Function

            Private Function WriteAttributes_AHPDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType) As Boolean
                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    oCommand.CommandText = "DELETE FROM Attributes"

                    Dim affected As Integer = DBExecuteNonQuery(ProviderType, oCommand)

                    Dim hasDefaulValue As Boolean
                    For Each Attribute As clsAttribute In AttributesList
                        If Not Attribute.ID.Equals(ATTRIBUTE_BUDGET_LIMIT_ID) Then
                            oCommand.CommandText = "INSERT INTO Attributes (aID, aName, aType, aValueType, aIsDefault, aHasDefaultValue, aDefaultValue) VALUES (?, ?, ?, ?, ?, ?, ?)"
                            oCommand.Parameters.Clear()
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aID", Attribute.ID.ToString))
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aName", Attribute.Name))
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aType", CInt(Attribute.Type)))
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aValueType", CInt(Attribute.ValueType)))
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aIsDefault", Attribute.IsDefault))
                            hasDefaulValue = Attribute.DefaultValue IsNot Nothing
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "aHasDefaultValue", hasDefaulValue))
                            If hasDefaulValue Then
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aDefaultValue", Attribute.DefaultValue.ToString))
                            Else
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aDefaultValue", ""))
                            End If
                            affected = DBExecuteNonQuery(ProviderType, oCommand)
                        End If
                    Next

                    If TableExists(Location, ProviderType, "ECCore_Categories") And TableExists(Location, ProviderType, "ECCore_CategoryEnums") And TableExists(Location, ProviderType, "ECCore_CategoryMappings") Then
                        For Each Attribute As clsAttribute In AttributesList
                            'If Attribute.ValueType = AttributeValueTypes.avtEnumeration And Not Attribute.EnumID.Equals(Guid.Empty) Then 'AS/2060
                            If (Attribute.ValueType = AttributeValueTypes.avtEnumeration Or Attribute.ValueType = AttributeValueTypes.avtEnumerationMulti) And Not Attribute.EnumID.Equals(Guid.Empty) Then 'AS/2060
                                oCommand.CommandText = "INSERT INTO ECCore_CategoryMappings (AttributeGuidID, CategoryGuidID) VALUES (?, ?)"
                                oCommand.Parameters.Clear()
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "AttributeGuidID", Attribute.ID.ToString))
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "CategoryGuidID", Attribute.EnumID.ToString))
                                affected = DBExecuteNonQuery(ProviderType, oCommand)
                            End If
                        Next

                        For Each E As clsAttributeEnumeration In Enumerations
                            oCommand.CommandText = "INSERT INTO ECCore_Categories (CategoryGuidID, CategoryName) VALUES (?, ?)"
                            oCommand.Parameters.Clear()
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "CategoryGuidID", E.ID.ToString))
                            oCommand.Parameters.Add(GetDBParameter(ProviderType, "CategoryName", E.Name))
                            affected = DBExecuteNonQuery(ProviderType, oCommand)

                            If affected > 0 Then
                                For Each eItem As clsAttributeEnumerationItem In E.Items
                                    oCommand.CommandText = "INSERT INTO ECCore_CategoryEnums (CategoryGuidID, EnumGuidID, EnumValue) VALUES (?, ?, ?)"
                                    oCommand.Parameters.Clear()
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "CategoryGuidID", E.ID.ToString))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "EnumGuidID", eItem.ID.ToString))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "EnumValue", eItem.Value))
                                    affected = DBExecuteNonQuery(ProviderType, oCommand)
                                Next
                            End If
                        Next
                    End If
                End Using

                Return True
            End Function

            Private Function WriteAttributes_XMLFile(ByVal FilePath As String) As Boolean
                Dim writer As XmlTextWriter = Nothing
                Try
                    writer = New XmlTextWriter(FilePath, System.Text.Encoding.Unicode)
                    writer.Formatting = Formatting.Indented
                    writer.WriteStartDocument()

                    writer.WriteStartElement("CustomAttributes")

                    For Each Attribute As clsAttribute In AttributesList
                        writer.WriteStartElement("Attribute")

                        writer.WriteStartElement("AttributeID")
                        writer.WriteString(Attribute.ID.ToString)
                        writer.WriteEndElement()

                        writer.WriteStartElement("AttributeName")
                        writer.WriteString(Attribute.Name)
                        writer.WriteEndElement()

                        writer.WriteStartElement("AttributeType")
                        writer.WriteString(Attribute.Type.ToString)
                        writer.WriteEndElement()

                        writer.WriteStartElement("AttributeValueType")
                        writer.WriteString(Attribute.ValueType.ToString)
                        writer.WriteEndElement()

                        'C1021===
                        writer.WriteStartElement("IsDefault")
                        writer.WriteString(If(Attribute.IsDefault, 1, 0))
                        writer.WriteEndElement()
                        'C1021==

                        writer.WriteStartElement("DefaultValue")
                        If Attribute.DefaultValue Is Nothing Then
                            writer.WriteString(UNDEFINED_ATTRIBUTE_DEFAULT_VALUE)
                        Else
                            If Attribute.ValueType = AttributeValueTypes.avtBoolean Then
                                writer.WriteString(If(CBool(Attribute.DefaultValue), 1, 0))
                            Else
                                writer.WriteString(Attribute.DefaultValue)
                            End If
                        End If
                        writer.WriteEndElement()

                        writer.WriteEndElement()
                    Next

                    writer.WriteEndElement()
                Finally
                    If Not (writer Is Nothing) Then
                        writer.Close()
                    End If
                End Try

                Return True
            End Function

            Private Function ReadAttributes_CanvasStreamDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer) As Boolean
                Dim time As Nullable(Of DateTime)
                Dim MS As MemoryStream = ProjectManager.StorageManager.Reader.GetModelStructureStream(StructureType.stAttributes, time, Location, ProviderType, ModelID)
                ' D4838 ===
                Dim res As Boolean = False
                If MS.Length > 0 Then
                    res = ReadAttributesStream(MS)
                End If
                ' D4838 ==
                Return res
            End Function

            Private Function ReadAttributes_AHPDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType) As Boolean
                If (ProjectManager Is Nothing) OrElse Not CheckDBConnection(ProviderType, Location) Then
                    Return False
                End If

                If Not TableExists(Location, ProviderType, "Attributes") Then
                    Return False
                End If

                AttributesList.Clear()
                AddDefaultAttributes()

                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim dbReader As DbDataReader

                    oCommand.CommandText = "SELECT * FROM Attributes"
                    oCommand.Parameters.Clear()

                    dbReader = DBExecuteReader(ProviderType, oCommand)

                    While dbReader.Read
                        Dim asID As String = CStr(dbReader("aID"))
                        If asID <> "" Then
                            Dim aGuidID As New Guid(asID)
                            If Not aGuidID.Equals(ATTRIBUTE_BUDGET_LIMIT_ID) Then
                                Dim aName As String = CStr(dbReader("aName"))
                                Dim aType As AttributeTypes = CType(CInt(dbReader("aType")), AttributeTypes)
                                Dim aValueType As AttributeValueTypes = CType(CInt(dbReader("aValueType")), AttributeValueTypes)
                                Dim aIsDefault As Boolean = CBool(dbReader("aIsDefault"))
                                Dim aHasDefaultValue As Boolean = CBool(dbReader("aHasDefaultValue"))

                                Dim asDefaultValue As String = ""
                                Dim oDefValue As Object = Nothing

                                If aHasDefaultValue Then
                                    asDefaultValue = CStr(dbReader("aDefaultValue"))
                                    Select Case aValueType
                                        Case AttributeValueTypes.avtString
                                            oDefValue = asDefaultValue
                                        Case AttributeValueTypes.avtLong
                                            ' fix for cases 6400 and 6398
                                            Dim s As String = asDefaultValue
                                            If aGuidID.Equals(ATTRIBUTE_RISK_NODE_TYPE_ID) Then
                                                Dim lValue As Long
                                                If Not Long.TryParse(s, lValue) Then
                                                    Select Case s
                                                        Case RiskNodeType.ntUncertainty.ToString
                                                            s = CLng(RiskNodeType.ntUncertainty).ToString
                                                        Case RiskNodeType.ntCategory.ToString
                                                            s = CLng(RiskNodeType.ntCategory).ToString
                                                        Case RiskNodeType.ntOBSOLETE.ToString
                                                            s = CLng(RiskNodeType.ntOBSOLETE).ToString
                                                    End Select
                                                End If
                                            End If
                                            oDefValue = CLng(s)
                                        Case AttributeValueTypes.avtDouble
                                            oDefValue = CDbl(asDefaultValue)
                                        Case AttributeValueTypes.avtBoolean
                                            oDefValue = CBool(asDefaultValue)
                                        Case AttributeValueTypes.avtEnumeration, AttributeValueTypes.avtEnumerationMulti
                                            oDefValue = asDefaultValue
                                    End Select
                                End If

                                AddAttribute(aGuidID, aName, aType, aValueType, oDefValue, aIsDefault)
                            End If
                        End If
                    End While
                    dbReader.Close()

                    ' read categories
                    If TableExists(Location, ProviderType, "ECCore_Categories") AndAlso TableExists(Location, ProviderType, "ECCore_CategoryEnums") AndAlso
                         TableExists(Location, ProviderType, "ECCore_CategoryMappings") Then
                        Enumerations.Clear()

                        oCommand.CommandText = "SELECT * FROM ECCore_Categories"
                        oCommand.Parameters.Clear()
                        dbReader = DBExecuteReader(ProviderType, oCommand)
                        While dbReader.Read
                            Dim cID As String = CStr(dbReader("CategoryGuidID"))
                            Dim cGuidID As New Guid(cID)
                            Dim cName As String = CStr(dbReader("CategoryName"))

                            Dim E As New clsAttributeEnumeration()
                            E.ID = cGuidID
                            E.Name = cName

                            Enumerations.Add(E)
                        End While
                        dbReader.Close()

                        oCommand.CommandText = "SELECT * FROM ECCore_CategoryEnums"
                        oCommand.Parameters.Clear()
                        dbReader = DBExecuteReader(ProviderType, oCommand)
                        While dbReader.Read
                            Dim cID As String = CStr(dbReader("CategoryGuidID"))
                            Dim eID As String = CStr(dbReader("EnumGuidID"))
                            Dim cGuidID As New Guid(cID)
                            Dim eGuidID As New Guid(eID)
                            Dim eValue As String = CStr(dbReader("EnumValue"))

                            Dim E As clsAttributeEnumeration = GetEnumByID(cGuidID)
                            If E IsNot Nothing AndAlso eValue <> "" Then
                                Dim aItem As clsAttributeEnumerationItem = E.AddItem(eValue)
                                aItem.ID = eGuidID
                            End If
                        End While
                        dbReader.Close()

                        oCommand.CommandText = "SELECT * FROM ECCore_CategoryMappings"
                        oCommand.Parameters.Clear()
                        dbReader = DBExecuteReader(ProviderType, oCommand)
                        While dbReader.Read
                            Dim aID As String = CStr(dbReader("AttributeGuidID"))
                            Dim cID As String = CStr(dbReader("CategoryGuidID"))
                            Dim aGuidID As Guid
                            Dim cGuidID As Guid
                            If Guid.TryParse(aID, aGuidID) AndAlso Guid.TryParse(cID, cGuidID) Then
                                Dim A As clsAttribute = GetAttributeByID(aGuidID)
                                Dim E As clsAttributeEnumeration = GetEnumByID(cGuidID)
                                If A IsNot Nothing And E IsNot Nothing Then
                                    A.EnumID = E.ID
                                End If
                            End If
                        End While
                        dbReader.Close()
                    End If
                End Using

                Return True
            End Function

            Private Sub ProcessLoadAttributes(ByVal reader As XmlReader)
                While reader.Read()
                    If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "Attribute") Then
                        Dim ID As Guid
                        Dim Name As String = ""
                        Dim Type As AttributeTypes
                        Dim ValueType As AttributeValueTypes
                        Dim IsDefault As Boolean 'C1021
                        Dim DefaultValue As Object = Nothing

                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "AttributeID") Then
                            reader.Read()
                            ID = New Guid(reader.Value)
                        End If

                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "AttributeName") Then
                            reader.Read()
                            Name = reader.Value
                        End If

                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "AttributeType") Then
                            reader.Read()
                            Type = reader.Value
                        End If

                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "AttributeValueType") Then
                            reader.Read()
                            ValueType = reader.Value
                        End If

                        'C1021===
                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "IsDefault") Then
                            reader.Read()
                            IsDefault = CBool(reader.Value = "1")
                        End If
                        'C1021==

                        reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "DefaultValue") Then
                            reader.Read()

                            If reader.Value = UNDEFINED_ATTRIBUTE_DEFAULT_VALUE Then
                                DefaultValue = Nothing
                            Else
                                Select Case ValueType
                                    Case AttributeValueTypes.avtBoolean
                                        DefaultValue = CBool(reader.Value = "1")
                                    Case AttributeValueTypes.avtDouble
                                        DefaultValue = CDbl(reader.Value)
                                    Case AttributeValueTypes.avtLong
                                        DefaultValue = CLng(reader.Value)
                                    Case AttributeValueTypes.avtString
                                        DefaultValue = CStr(reader.Value)
                                End Select
                            End If
                        End If

                        AddAttribute(ID, Name, Type, ValueType, DefaultValue, IsDefault)
                    End If
                End While
            End Sub

            Private Function ReadAttributes_XMLFile(ByVal FilePath As String) As Boolean
                If Not My.Computer.FileSystem.FileExists(FilePath) Then
                    Return False
                End If

                Dim reader As XmlTextReader = Nothing
                Try
                    reader = New XmlTextReader(FilePath)
                    reader.WhitespaceHandling = WhitespaceHandling.None
                    While reader.Read()
                        If (reader.NodeType = XmlNodeType.Element) And (reader.Name = "CustomAttributes") Then
                            ProcessLoadAttributes(reader.ReadSubtree())
                        End If
                    End While
                Finally
                    If Not (reader Is Nothing) Then
                        reader.Close()
                    End If
                End Try

                Return True
            End Function

            Private Function WriteAttributesValuesStream(ByVal UserID As Integer) As MemoryStream
                If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 19 Then
                    Return WriteAttributesValuesStream_1_1_19(UserID)
                Else
                    If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion >= 20 And ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 26 Then
                        Return WriteAttributesValuesStream_1_1_20(UserID)
                    Else
                        Return WriteAttributesValuesStream_1_1_27(UserID)
                    End If
                End If
            End Function

            Private Function WriteAttributesValuesStream_1_1_20(ByVal UserID As Integer) As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                Dim UserValues As List(Of clsAttributeValue) = GetUserAttributeValues(UserID)

                BW.Write(UserValues.Count)

                For Each value As clsAttributeValue In UserValues
                    BW.Write(value.AttributeID.ToByteArray)
                    BW.Write(CInt(value.ValueType))
                    Select Case value.ValueType
                        Case AttributeValueTypes.avtBoolean
                            BW.Write(CBool(value.Value))
                        Case AttributeValueTypes.avtDouble
                            BW.Write(CDbl(value.Value))
                        Case AttributeValueTypes.avtLong
                            BW.Write(CLng(value.Value))
                        Case AttributeValueTypes.avtString
                            BW.Write(CStr(value.Value))
                        Case AttributeValueTypes.avtEnumeration
                            BW.Write(CType(value.Value, Guid).ToByteArray)
                    End Select
                    BW.Write(value.ObjectID.ToByteArray)
                Next

                BW.Close()

                Return MS
            End Function

            Private Function WriteAttributesValuesStream_1_1_27(ByVal UserID As Integer) As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                Dim UserValues As List(Of clsAttributeValue) = GetUserAttributeValues(UserID)

                BW.Write(UserValues.Count)

                For Each value As clsAttributeValue In UserValues
                    BW.Write(value.AttributeID.ToByteArray)
                    BW.Write(CInt(value.ValueType))
                    Select Case value.ValueType
                        Case AttributeValueTypes.avtBoolean
                            BW.Write(CBool(value.Value))
                        Case AttributeValueTypes.avtDouble
                            BW.Write(CDbl(value.Value))
                        Case AttributeValueTypes.avtLong
                            BW.Write(CLng(value.Value))
                        Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                            BW.Write(CStr(value.Value))
                        Case AttributeValueTypes.avtEnumeration
                            BW.Write(CType(value.Value, Guid).ToByteArray)
                    End Select
                    BW.Write(value.ObjectID.ToByteArray)
                    BW.Write(value.AdditionalID.ToByteArray)
                Next

                BW.Close()

                Return MS
            End Function

            Private Function WriteAttributesValuesStream_1_1_19(ByVal UserID As Integer) As MemoryStream
                Dim MS As New MemoryStream
                Dim BW As New BinaryWriter(MS)

                Dim UserValues As List(Of clsAttributeValue) = GetUserAttributeValues(UserID)

                BW.Write(UserValues.Count)

                For Each value As clsAttributeValue In UserValues
                    BW.Write(value.AttributeID.ToByteArray)
                    BW.Write(CInt(value.ValueType))
                    Select Case value.ValueType
                        Case AttributeValueTypes.avtBoolean
                            BW.Write(CBool(value.Value))
                        Case AttributeValueTypes.avtDouble
                            BW.Write(CDbl(value.Value))
                        Case AttributeValueTypes.avtLong
                            BW.Write(CLng(value.Value))
                        Case AttributeValueTypes.avtString
                            BW.Write(CStr(value.Value))
                    End Select
                    BW.Write(value.ObjectID.ToByteArray)
                Next

                BW.Close()

                Return MS
            End Function

            Private Function ReadAttributesValuesStream(ByVal UserID As Integer, ByVal Stream As MemoryStream) As Boolean
                If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 19 Then
                    Return ReadAttributesValuesStream_1_1_19(UserID, Stream)
                Else
                    If ProjectManager.StorageManager.CanvasDBVersion.MinorVersion >= 20 And ProjectManager.StorageManager.CanvasDBVersion.MinorVersion <= 26 Then
                        Return ReadAttributesValuesStream_1_1_20(UserID, Stream)
                    Else
                        Return ReadAttributesValuesStream_1_1_27(UserID, Stream)
                    End If
                End If
            End Function

            Private Function ReadAttributesValuesStream_1_1_20(ByVal UserID As Integer, ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim ValueType As AttributeValueTypes
                Dim Value As Object = Nothing
                Dim ObjectID As Guid

                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    Select Case ValueType
                        Case AttributeValueTypes.avtBoolean
                            Value = BR.ReadBoolean
                        Case AttributeValueTypes.avtDouble
                            Value = BR.ReadDouble
                        Case AttributeValueTypes.avtLong
                            Value = BR.ReadInt64
                        Case AttributeValueTypes.avtString
                            Value = BR.ReadString
                        Case AttributeValueTypes.avtEnumeration
                            Value = New Guid(BR.ReadBytes(16))
                    End Select
                    ObjectID = New Guid(BR.ReadBytes(16))

                    'Dim NewValue As New clsAttributeValue(ID, UserID, ValueType, Value)
                    'ValuesList.Add(NewValue)
                    SetAttributeValue(ID, UserID, ValueType, Value, ObjectID, Guid.Empty)
                Next

                BR.Close()

                Return True
            End Function

            Private Function ReadAttributesValuesStream_1_1_27(ByVal UserID As Integer, ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim ValueType As AttributeValueTypes
                Dim Value As Object = Nothing
                Dim ObjectID As Guid
                Dim AdditionalID As Guid

                Dim HasWrongValues As Boolean = False
                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    Select Case ValueType
                        Case AttributeValueTypes.avtBoolean
                            Value = BR.ReadBoolean
                        Case AttributeValueTypes.avtDouble
                            Value = BR.ReadDouble
                        Case AttributeValueTypes.avtLong
                            Value = BR.ReadInt64
                        Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                            Value = BR.ReadString
                        Case AttributeValueTypes.avtEnumeration
                            Value = New Guid(BR.ReadBytes(16))
                    End Select
                    ObjectID = New Guid(BR.ReadBytes(16))
                    AdditionalID = New Guid(BR.ReadBytes(16))

                    If ID.Equals(ATTRIBUTE_CONTROL_COST_ID) OrElse ID.Equals(ATTRIBUTE_CONTROL_CATEGORY_ID) Then 'A0885
                        If ProjectManager.Controls.GetControlByID(ObjectID) IsNot Nothing Then
                            SetAttributeValue(ID, UserID, ValueType, Value, ObjectID, AdditionalID, False)
                        Else
                            HasWrongValues = True
                        End If
                    Else
                        SetAttributeValue(ID, UserID, ValueType, Value, ObjectID, AdditionalID, False)
                    End If
                Next

                BR.Close()

                If HasWrongValues Then
                    WriteAttributesValues_CanvasStreamDatabase(ProjectManager.StorageManager.ProjectLocation, ProjectManager.StorageManager.ProviderType, ProjectManager.StorageManager.ModelID, UserID)
                End If

                Return True
            End Function

            Private Function ReadAttributesValuesStream_1_1_19(ByVal UserID As Integer, ByVal Stream As MemoryStream) As Boolean
                Stream.Seek(0, SeekOrigin.Begin)

                Dim BR As New BinaryReader(Stream)

                Dim count As Integer = BR.ReadInt32

                Dim ID As Guid
                Dim ValueType As AttributeValueTypes
                Dim Value As Object = Nothing
                Dim ObjectID As Guid

                For i As Integer = 1 To count
                    ID = New Guid(BR.ReadBytes(16))
                    ValueType = CType(BR.ReadInt32, AttributeValueTypes)
                    Select Case ValueType
                        Case AttributeValueTypes.avtBoolean
                            Value = BR.ReadBoolean
                        Case AttributeValueTypes.avtDouble
                            Value = BR.ReadDouble
                        Case AttributeValueTypes.avtLong
                            Value = BR.ReadInt64
                        Case AttributeValueTypes.avtString
                            Value = BR.ReadString
                    End Select
                    ObjectID = New Guid(BR.ReadBytes(16))

                    'Dim NewValue As New clsAttributeValue(ID, UserID, ValueType, Value)
                    'ValuesList.Add(NewValue)
                    SetAttributeValue(ID, UserID, ValueType, Value, ObjectID, Guid.Empty)
                Next

                BR.Close()

                Return True
            End Function

            Private Function WriteAttributesValues_CanvasStreamDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer, ByVal UserID As Integer) As Boolean
                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim MS As MemoryStream

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim usersList As New List(Of clsUser)

                    If UserID = -1 Then
                        oCommand.CommandText = "DELETE FROM UserData WHERE ProjectID=? AND DataType=?"
                        oCommand.Parameters.Clear()
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", CInt(UserDataType.udtAttributeValues)))

                        usersList = ProjectManager.UsersList
                    Else
                        oCommand.CommandText = "DELETE FROM UserData WHERE ProjectID=? AND DataType=? AND UserID=?"
                        oCommand.Parameters.Clear()
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", CInt(UserDataType.udtAttributeValues)))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UserID))

                        Dim u As clsUser = ProjectManager.GetUserByID(UserID)
                        If u IsNot Nothing Then
                            usersList.Add(u)
                        End If
                    End If

                    Dim affected As Integer = DBExecuteNonQuery(ProviderType, oCommand)

                    MS = Nothing

                    For Each user As clsUser In usersList
                        MS = New MemoryStream
                        MS = WriteAttributesValuesStream(user.UserID)

                        oCommand.CommandText = "INSERT INTO UserData (ProjectID, UserID, DataType, StreamSize, Stream) VALUES (?, ?, ?, ?, ?)"
                        oCommand.Parameters.Clear()
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", user.UserID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", UserDataType.udtAttributeValues))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "StreamSize", MS.ToArray.Length))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "Stream", MS.ToArray))
                        affected = DBExecuteNonQuery(ProviderType, oCommand)
                    Next

                    If UserID = -1 Or UserID = UNDEFINED_USER_ID Then
                        MS = New MemoryStream
                        MS = WriteAttributesValuesStream(UNDEFINED_USER_ID)

                        oCommand.CommandText = "INSERT INTO UserData (ProjectID, UserID, DataType, StreamSize, Stream) VALUES (?, ?, ?, ?, ?)"
                        oCommand.Parameters.Clear()
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UNDEFINED_USER_ID))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", UserDataType.udtAttributeValues))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "StreamSize", MS.ToArray.Length))
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "Stream", MS.ToArray))
                        affected = DBExecuteNonQuery(ProviderType, oCommand)
                    End If

                End Using

                Return True
            End Function

            Private Function WriteAttributesValues_AHPDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal UserID As Integer) As Boolean
                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim usersList As New List(Of clsUser)

                    If UserID = -1 Then
                        oCommand.CommandText = "DELETE FROM AttributesValues"
                        oCommand.Parameters.Clear()

                        usersList = ProjectManager.UsersList
                    Else
                        oCommand.CommandText = "DELETE FROM AttributesValues WHERE UserID=?"
                        oCommand.Parameters.Clear()
                        oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UserID))

                        Dim u As clsUser = ProjectManager.GetUserByID(UserID)
                        If u IsNot Nothing Then
                            usersList.Add(u)
                        End If
                    End If

                    Dim affected As Integer = DBExecuteNonQuery(ProviderType, oCommand)

                    Dim transaction As DbTransaction
                    transaction = dbConnection.BeginTransaction
                    oCommand.Transaction = transaction

                    Dim attribute As clsAttribute

                    For Each user As clsUser In usersList
                        Dim UserValues As List(Of clsAttributeValue) = GetUserAttributeValues(user.UserID)
                        For Each aValue As clsAttributeValue In UserValues
                            attribute = GetAttributeByID(aValue.AttributeID)
                            If attribute IsNot Nothing Then
                                oCommand.CommandText = "INSERT INTO AttributesValues (UserID, aID, aValueType, aValue, aObjectID, aObjectID_String) VALUES (?, ?, ?, ?, ?, ?)"
                                oCommand.Parameters.Clear()
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", GetAHPUserID(ProjectManager, user)))
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aID", aValue.AttributeID.ToString))
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aValueType", CInt(aValue.ValueType)))
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aValue", aValue.Value.ToString))
                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aObjectID", aValue.ObjectID.ToString))

                                Dim s As String = aValue.ObjectID.ToString
                                Select Case attribute.Type
                                    Case AttributeTypes.atUser
                                        s = aValue.ObjectID.ToString
                                    Case AttributeTypes.atNode
                                        Dim i As Integer = 0
                                        Dim node As clsNode = Nothing
                                        While i < ProjectManager.Hierarchies.Count And node Is Nothing
                                            Dim H As clsHierarchy = ProjectManager.Hierarchies(i)
                                            node = H.GetNodeByID(aValue.ObjectID)
                                            i += 1
                                        End While
                                        If node IsNot Nothing Then
                                            Dim nid As Integer = If(IsNodesZeroBased(ProjectManager), node.NodeID + 1, node.NodeID)
                                            s = "N" + nid.ToString
                                        End If
                                    Case AttributeTypes.atLikelihood, AttributeTypes.atImpact
                                        Dim H As clsHierarchy = ProjectManager.Hierarchy(If(attribute.Type = AttributeTypes.atLikelihood, ECHierarchyID.hidLikelihood, ECHierarchyID.hidImpact))
                                        If H IsNot Nothing Then
                                            Dim node As clsNode = H.GetNodeByID(aValue.ObjectID)
                                            If node IsNot Nothing Then
                                                Dim nid As Integer = If(IsNodesZeroBased(ProjectManager), node.NodeID + 1, node.NodeID)
                                                s = "N" + nid.ToString
                                            End If
                                        End If
                                    Case AttributeTypes.atAlternative
                                        Dim i As Integer = 0
                                        Dim alt As clsNode = Nothing
                                        While i < ProjectManager.AltsHierarchies.Count And alt Is Nothing
                                            Dim AH As clsHierarchy = ProjectManager.ActiveAlternatives
                                            alt = AH.GetNodeByID(aValue.ObjectID)
                                            i += 1
                                        End While
                                        If alt IsNot Nothing Then
                                            Dim aid As Integer = If(IsAltsZeroBased(ProjectManager), alt.NodeID + 1, alt.NodeID)
                                            s = "A" + aid.ToString
                                        End If
                                End Select

                                oCommand.Parameters.Add(GetDBParameter(ProviderType, "aObjectID_String", s))
                                affected = DBExecuteNonQuery(ProviderType, oCommand)
                            End If
                        Next
                    Next

                    If UserID = -1 Or UserID = UNDEFINED_USER_ID Then
                        Dim UserValues As List(Of clsAttributeValue) = GetUserAttributeValues(UNDEFINED_USER_ID)
                        For Each aValue As clsAttributeValue In UserValues
                            attribute = GetAttributeByID(aValue.AttributeID)
                            If attribute IsNot Nothing Then
                                Dim IsValidValue As Boolean = True

                                Dim s As String = aValue.ObjectID.ToString
                                Select Case attribute.Type
                                    Case AttributeTypes.atUser
                                        s = aValue.ObjectID.ToString
                                    Case AttributeTypes.atNode
                                        Dim i As Integer = 0
                                        Dim node As clsNode = Nothing
                                        While i < ProjectManager.Hierarchies.Count And node Is Nothing
                                            Dim H As clsHierarchy = ProjectManager.Hierarchies(i)
                                            node = H.GetNodeByID(aValue.ObjectID)
                                            i += 1
                                        End While
                                        If node IsNot Nothing Then
                                            Dim nid As Integer = If(IsNodesZeroBased(ProjectManager), node.NodeID + 1, node.NodeID)
                                            s = "N" + nid.ToString
                                        Else
                                            IsValidValue = False
                                        End If
                                    Case AttributeTypes.atLikelihood, AttributeTypes.atImpact
                                        Dim H As clsHierarchy = ProjectManager.Hierarchy(If(attribute.Type = AttributeTypes.atLikelihood, ECHierarchyID.hidLikelihood, ECHierarchyID.hidImpact))
                                        If H IsNot Nothing Then
                                            Dim node As clsNode = H.GetNodeByID(aValue.ObjectID)
                                            If node IsNot Nothing Then
                                                Dim nid As Integer = If(IsNodesZeroBased(ProjectManager), node.NodeID + 1, node.NodeID)
                                                s = "N" + nid.ToString
                                            End If
                                        End If
                                    Case AttributeTypes.atAlternative
                                        Dim i As Integer = 0
                                        Dim alt As clsNode = Nothing
                                        While i < ProjectManager.AltsHierarchies.Count And alt Is Nothing
                                            Dim AH As clsHierarchy = ProjectManager.ActiveAlternatives
                                            alt = AH.GetNodeByID(aValue.ObjectID)
                                            i += 1
                                        End While
                                        If alt IsNot Nothing Then
                                            Dim aid As Integer = If(IsAltsZeroBased(ProjectManager), alt.NodeID + 1, alt.NodeID)
                                            s = "A" + aid.ToString
                                        Else
                                            IsValidValue = False
                                        End If
                                End Select

                                If IsValidValue Then
                                    oCommand.CommandText = "INSERT INTO AttributesValues (UserID, aID, aValueType, aValue, aObjectID, aObjectID_String) VALUES (?, ?, ?, ?, ?, ?)"
                                    oCommand.Parameters.Clear()
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UNDEFINED_USER_ID))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "aID", aValue.AttributeID.ToString))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "aValueType", CInt(aValue.ValueType)))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "aValue", aValue.Value.ToString))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "aObjectID", aValue.ObjectID.ToString))
                                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "aObjectID_String", s))
                                    affected = DBExecuteNonQuery(ProviderType, oCommand)
                                End If
                            End If
                        Next
                    End If

                    transaction.Commit()

                End Using

                Return True
            End Function

            Private Function ReadAttributesValues_CanvasStreamDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer, ByVal UserID As Integer) As Boolean
                If (ProjectManager Is Nothing) Then Return False

                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim dbReader As DbDataReader

                    Dim MS As New MemoryStream

                    oCommand.CommandText = "SELECT * FROM UserData WHERE ProjectID=? AND DataType=? AND UserID=?"
                    oCommand.Parameters.Clear()
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", CInt(UserDataType.udtAttributeValues)))
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UserID))

                    dbReader = DBExecuteReader(ProviderType, oCommand)

                    While dbReader.Read
                        MS = Nothing
                        MS = New MemoryStream

                        UserID = dbReader("UserID")

                        Dim bufferSize As Integer = CInt(dbReader("StreamSize"))      ' The size of the BLOB buffer.
                        Dim outbyte(bufferSize - 1) As Byte  ' The BLOB byte() buffer to be filled by GetBytes.
                        Dim retval As Long                   ' The bytes returned from GetBytes.
                        Dim startIndex As Long = 0           ' The starting position in the BLOB output.

                        retval = dbReader.GetBytes(CInt(dbReader.GetOrdinal("Stream")), startIndex, outbyte, 0, bufferSize)

                        Dim bw As BinaryWriter = New BinaryWriter(MS)

                        ' Continue reading and writing while there are bytes beyond the size of the buffer.
                        Do While retval = bufferSize
                            bw.Write(outbyte)
                            bw.Flush()

                            ' Reposition the start index to the end of the last buffer and fill the buffer.
                            startIndex += bufferSize
                            retval = dbReader.GetBytes(CInt(dbReader.GetOrdinal("Stream")), startIndex, outbyte, 0, bufferSize)
                        Loop

                        ' Write the remaining buffer.
                        bw.Write(outbyte, 0, retval)
                        bw.Flush()

                        ReadAttributesValuesStream(UserID, MS)
                    End While
                    dbReader.Close()
                End Using

                Return True
            End Function

            Private Function ReadAllAttributesValues_CanvasStreamDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer) As Boolean
                If (ProjectManager Is Nothing) Then Return False

                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim dbReader As DbDataReader

                    Dim MS As New MemoryStream

                    oCommand.CommandText = "SELECT * FROM UserData WHERE ProjectID=? AND DataType=?"
                    oCommand.Parameters.Clear()
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "ProjectID", ModelID))
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "DataType", CInt(UserDataType.udtAttributeValues)))

                    dbReader = DBExecuteReader(ProviderType, oCommand)

                    While dbReader.Read
                        MS = Nothing
                        MS = New MemoryStream

                        Dim UserID As Integer = dbReader("UserID")

                        Dim bufferSize As Integer = CInt(dbReader("StreamSize"))      ' The size of the BLOB buffer.
                        Dim outbyte(bufferSize - 1) As Byte  ' The BLOB byte() buffer to be filled by GetBytes.
                        Dim retval As Long                   ' The bytes returned from GetBytes.
                        Dim startIndex As Long = 0           ' The starting position in the BLOB output.

                        retval = dbReader.GetBytes(CInt(dbReader.GetOrdinal("Stream")), startIndex, outbyte, 0, bufferSize)

                        Dim bw As BinaryWriter = New BinaryWriter(MS)

                        ' Continue reading and writing while there are bytes beyond the size of the buffer.
                        Do While retval = bufferSize
                            bw.Write(outbyte)
                            bw.Flush()

                            ' Reposition the start index to the end of the last buffer and fill the buffer.
                            startIndex += bufferSize
                            retval = dbReader.GetBytes(CInt(dbReader.GetOrdinal("Stream")), startIndex, outbyte, 0, bufferSize)
                        Loop

                        ' Write the remaining buffer.
                        bw.Write(outbyte, 0, retval)
                        bw.Flush()

                        ReadAttributesValuesStream(UserID, MS)
                    End While
                    dbReader.Close()
                End Using

                Return True
            End Function

            Private Function ReadAttributesValues_AHPDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal UserID As Integer) As Boolean
                If (ProjectManager Is Nothing) OrElse Not CheckDBConnection(ProviderType, Location) Then
                    Return False
                End If

                If Not TableExists(Location, ProviderType, "AttributesValues") Then
                    Return False
                End If

                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim dbReader As DbDataReader

                    Dim MS As New MemoryStream

                    oCommand.CommandText = "SELECT * FROM AttributesValues WHERE UserID=?"
                    oCommand.Parameters.Clear()
                    oCommand.Parameters.Add(GetDBParameter(ProviderType, "UserID", UserID))

                    dbReader = DBExecuteReader(ProviderType, oCommand)

                    While dbReader.Read
                        Dim asID As String = CStr(dbReader("aID"))
                        If asID <> "" Then
                            Dim aGuidID As New Guid(asID)
                            Dim aUserID As Integer = CInt(dbReader("UserID"))
                            Dim aValueType As AttributeValueTypes = CType(CInt(dbReader("aValueType")), AttributeValueTypes)
                            Dim asValue As String
                            If TypeOf (dbReader("aValue")) Is DBNull Then
                                asValue = ""
                            Else
                                asValue = CStr(dbReader("aValue"))
                            End If

                            Dim asObjectID As String = CStr(dbReader("aObjectID"))
                            Dim aGuidObjectID As New Guid(asObjectID)
                            'Dim aObjectID_String As String = CStr(dbReader("aObjectID_String")) 'AS/081
                            Dim aObjectID_String As String 'AS/081===
                            Try
                                aObjectID_String = CStr(dbReader("aObjectID_String"))
                            Catch
                                aObjectID_String = ""
                            End Try 'AS/081==

                            Dim oValue As Object = Nothing

                            Select Case aValueType
                                Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                    oValue = asValue
                                Case AttributeValueTypes.avtLong
                                    oValue = CLng(asValue)
                                Case AttributeValueTypes.avtDouble
                                    oValue = CDbl(MiscFuncs.FixStringWithSingleValue(asValue))
                                Case AttributeValueTypes.avtBoolean
                                    oValue = CBool(asValue)
                                Case AttributeValueTypes.avtEnumeration
                                    oValue = New Guid(asValue)
                            End Select

                            Dim attr As clsAttribute = GetAttributeByID(aGuidID)

                            Dim gID As Guid
                            Dim intID As Integer
                            Dim id As Object = Nothing
                            If Guid.TryParse(aObjectID_String.Trim, gID) Then
                                id = gID
                            Else
                                If Integer.TryParse(aObjectID_String.Trim.Substring(1), intID) Then
                                    id = intID
                                End If
                            End If

                            If attr IsNot Nothing AndAlso id IsNot Nothing Then
                                Select Case attr.Type
                                    Case AttributeTypes.atAlternative
                                        Dim alt As clsNode = ProjectManager.ActiveAlternatives.GetNodeByID(id)
                                        If alt IsNot Nothing Then
                                            aGuidObjectID = alt.NodeGuidID
                                        End If
                                    Case AttributeTypes.atNode
                                        Dim node As clsNode = Nothing
                                        Dim i As Integer = 0
                                        While i < ProjectManager.Hierarchies.Count And node Is Nothing
                                            Dim H As clsHierarchy = ProjectManager.Hierarchies(i)
                                            node = H.GetNodeByID(id)
                                            i += 1
                                        End While
                                        If node IsNot Nothing Then
                                            aGuidObjectID = node.NodeGuidID
                                        End If
                                    Case AttributeTypes.atLikelihood, AttributeTypes.atImpact
                                        Dim H As clsHierarchy = ProjectManager.Hierarchy(If(attr.Type = AttributeTypes.atLikelihood, ECHierarchyID.hidLikelihood, ECHierarchyID.hidImpact))
                                        If H IsNot Nothing Then
                                            Dim node As clsNode = H.GetNodeByID(id)
                                            If node IsNot Nothing Then
                                                aGuidObjectID = node.NodeGuidID
                                            End If
                                        End If
                                End Select
                                SetAttributeValue(aGuidID, aUserID, aValueType, oValue, aGuidObjectID, Guid.Empty)
                            End If
                        End If
                    End While
                    dbReader.Close()
                End Using

                Return True
            End Function

            Private Function ReadAllAttributesValues_AHPDatabase(ByVal Location As String, ByVal ProviderType As DBProviderType) As Boolean
                If (ProjectManager Is Nothing) OrElse Not CheckDBConnection(ProviderType, Location) Then
                    Return False
                End If

                If Not TableExists(Location, ProviderType, "AttributesValues") Then
                    Return False
                End If

                Using dbConnection As DbConnection = GetDBConnection(ProviderType, Location)
                    dbConnection.Open()

                    Dim oCommand As DbCommand = GetDBCommand(ProviderType)
                    oCommand.Connection = dbConnection

                    Dim dbReader As DbDataReader

                    Dim MS As New MemoryStream

                    oCommand.CommandText = "SELECT * FROM AttributesValues"

                    dbReader = DBExecuteReader(ProviderType, oCommand)

                    While dbReader.Read
                        Dim asID As String = CStr(dbReader("aID"))
                        If asID <> "" Then
                            Dim aGuidID As New Guid(asID)
                            Dim aUserID As Integer = CInt(dbReader("UserID"))
                            Dim aValueType As AttributeValueTypes = CType(CInt(dbReader("aValueType")), AttributeValueTypes)
                            Dim asValue As String
                            If TypeOf (dbReader("aValue")) Is DBNull Then
                                asValue = ""
                            Else
                                asValue = CStr(dbReader("aValue"))
                            End If

                            Dim asObjectID As String = CStr(dbReader("aObjectID"))
                            Dim aGuidObjectID As New Guid(asObjectID)
                            'Dim aObjectID_String As String = CStr(dbReader("aObjectID_String")) 'AS/081
                            Dim aObjectID_String As String 'AS/081===
                            Try
                                aObjectID_String = CStr(dbReader("aObjectID_String"))
                            Catch
                                aObjectID_String = ""
                            End Try 'AS/081==

                            Dim oValue As Object = Nothing

                            Select Case aValueType
                                Case AttributeValueTypes.avtString, AttributeValueTypes.avtEnumerationMulti
                                    oValue = asValue
                                Case AttributeValueTypes.avtLong
                                    oValue = CLng(asValue)
                                Case AttributeValueTypes.avtDouble
                                    oValue = CDbl(MiscFuncs.FixStringWithSingleValue(asValue))
                                Case AttributeValueTypes.avtBoolean
                                    oValue = CBool(asValue)
                                Case AttributeValueTypes.avtEnumeration
                                    oValue = New Guid(asValue)
                            End Select

                            Dim attr As clsAttribute = GetAttributeByID(aGuidID)

                            Dim gID As Guid
                            Dim intID As Integer
                            Dim id As Object = Nothing
                            If Guid.TryParse(aObjectID_String.Trim, gID) Then
                                id = gID
                            Else
                                If Integer.TryParse(aObjectID_String.Trim.Substring(1), intID) Then
                                    id = intID
                                End If
                            End If

                            If attr IsNot Nothing Then
                                Select Case attr.Type
                                    Case AttributeTypes.atAlternative
                                        Dim alt As clsNode = ProjectManager.ActiveAlternatives.GetNodeByID(id)
                                        If alt IsNot Nothing Then
                                            aGuidObjectID = alt.NodeGuidID
                                        End If
                                    Case AttributeTypes.atNode
                                        Dim node As clsNode = Nothing
                                        Dim i As Integer = 0
                                        While i < ProjectManager.Hierarchies.Count And node Is Nothing
                                            Dim H As clsHierarchy = ProjectManager.Hierarchies(i)
                                            node = H.GetNodeByID(id)
                                            i += 1
                                        End While
                                        If node IsNot Nothing Then
                                            aGuidObjectID = node.NodeGuidID
                                        End If
                                    Case AttributeTypes.atLikelihood, AttributeTypes.atImpact
                                        Dim H As clsHierarchy = ProjectManager.Hierarchy(If(attr.Type = AttributeTypes.atLikelihood, ECHierarchyID.hidLikelihood, ECHierarchyID.hidImpact))
                                        If H IsNot Nothing Then
                                            Dim node As clsNode = H.GetNodeByID(id)
                                            If node IsNot Nothing Then
                                                aGuidObjectID = node.NodeGuidID
                                            End If
                                        End If
                                End Select
                                SetAttributeValue(aGuidID, aUserID, aValueType, oValue, aGuidObjectID, Guid.Empty)
                            End If
                        End If
                    End While
                    dbReader.Close()
                End Using

                Return True
            End Function

            Public Function ReadAttributes(ByVal StorageType As AttributesStorageType, ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer) As Boolean
                AttributesList.Clear()
                ValuesList.Clear()

                AddDefaultAttributes()

                Select Case StorageType
                    Case AttributesStorageType.astStreamsDatabase
                        ReadAttributes_CanvasStreamDatabase(Location, ProviderType, ModelID)
                        ReadAttributeValues(StorageType, Location, ProviderType, ModelID, -1)
                        ProjectManager.CombinedGroups.ApplyRules()
                        'ReadAttributesValues_CanvasStreamDatabase(Location, ProviderType, ModelID, UNDEFINED_USER_ID)
                    Case AttributesStorageType.astDatabase
                        ReadAttributes_AHPDatabase(Location, ProviderType)
                    Case AttributesStorageType.astXMLFile
                        Return ReadAttributes_XMLFile(Location)
                End Select

                Return True
            End Function

            Public Function WriteAttributes(ByVal StorageType As AttributesStorageType, ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer) As Boolean
                Select Case StorageType
                    Case AttributesStorageType.astStreamsDatabase
                        WriteAttributes_CanvasStreamDatabase(Location, ProviderType, ModelID)
                        WriteAttributesValues_CanvasStreamDatabase(Location, ProviderType, ModelID, UNDEFINED_USER_ID)
                        ProjectManager.PipeBuilder.PipeCreated = False
                    Case AttributesStorageType.astDatabase
                        WriteAttributes_AHPDatabase(Location, ProviderType)
                    Case AttributesStorageType.astXMLFile
                        WriteAttributes_XMLFile(Location)
                End Select
                Return True
            End Function

            Public Function ReadAttributeValues(ByVal StorageType As AttributesStorageType, ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer, Optional ByVal UserID As Integer = -1) As Boolean
                If UserID <> -1 Then
                    Select Case StorageType
                        Case AttributesStorageType.astStreamsDatabase
                            Return ReadAttributesValues_CanvasStreamDatabase(Location, ProviderType, ModelID, UserID)
                        Case AttributesStorageType.astDatabase
                            Return ReadAttributesValues_AHPDatabase(Location, ProviderType, UserID)
                        Case AttributesStorageType.astXMLFile
                    End Select
                Else
                    Select Case StorageType
                        Case AttributesStorageType.astStreamsDatabase
                            ReadAllAttributesValues_CanvasStreamDatabase(Location, ProviderType, ModelID)
                        Case AttributesStorageType.astDatabase
                            ReadAllAttributesValues_AHPDatabase(Location, ProviderType)
                        Case AttributesStorageType.astXMLFile
                    End Select
                End If
                Return True
            End Function

            Public Function WriteAttributeValues(ByVal StorageType As AttributesStorageType, ByVal Location As String, ByVal ProviderType As DBProviderType, ByVal ModelID As Integer, ByVal UserID As Integer) As Boolean
                Select Case StorageType
                    Case AttributesStorageType.astStreamsDatabase
                        'ProjectManager.PipeBuilder.PipeCreated = False
                        Return WriteAttributesValues_CanvasStreamDatabase(Location, ProviderType, ModelID, UserID)
                    Case AttributesStorageType.astDatabase
                        Return WriteAttributesValues_AHPDatabase(Location, ProviderType, UserID)
                    Case AttributesStorageType.astXMLFile
                End Select

                Return True
            End Function

            Public Sub AddDefaultAttributes()
                AddAttribute(ATTRIBUTE_PAIRWISE_TYPE_ID, ATTRIBUTE_PAIRWISE_TYPE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 1, True) ' 1 = verbal
                AddAttribute(ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_ID, ATTRIBUTE_PAIRWISE_FORCE_GRAPHICAL_NAME, AttributeTypes.atNode, AttributeValueTypes.avtBoolean, True, True)
                AddAttribute(ATTRIBUTE_EVALUATE_DIAGONALS_MODE_ID, ATTRIBUTE_EVALUATE_DIAGONALS_MODE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 2, True) '2 = FirstAndSecond
                AddAttribute(ATTRIBUTE_EVALUATE_DIAGONALS_ADVANCED_MODE_ID, ATTRIBUTE_EVALUATE_DIAGONALS_ADVANCED_MODE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 2, True) '2 = Medium
                AddAttribute(ATTRIBUTE_CLUSTER_PHRASE_ID, ATTRIBUTE_CLUSTER_PHRASE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)
                AddAttribute(ATTRIBUTE_CLUSTER_PHRASE_MULTI_ID, ATTRIBUTE_CLUSTER_PHRASE_MULTI_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)
                AddAttribute(ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_ID, ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)  ' D4133
                AddAttribute(ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_MULTI_ID, ATTRIBUTE_RISK_CTRLS_CLUSTER_PHRASE_MULTI_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)  ' D4133
                AddAttribute(ATTRIBUTE_CLUSTER_PHRASE_LOCAL_RES_ID, ATTRIBUTE_CLUSTER_PHRASE_LOCAL_RES_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)    ' D4327
                'AddAttribute(ATTRIBUTE_CLUSTER_PHRASE_GLOBAL_RES_ID, ATTRIBUTE_CLUSTER_PHRASE_GLOBAL_RES_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)    ' D4327
                AddAttribute(ATTRIBUTE_DEFAULT_BRUSH_COLOR_ID, ATTRIBUTE_DEFAULT_BRUSH_COLOR_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtLong, -1, True) '2 = Medium
                AddAttribute(ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_ID, ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 1, True)
                AddAttribute(ATTRIBUTE_DISPLAY_OPTION_RATINGS_ID, ATTRIBUTE_DISPLAY_OPTION_PAIRWISE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 1, True)

                AddAttribute(ATTRIBUTE_DEFAULT_BRUSH_COLOR_OBJECTIVE_ID, ATTRIBUTE_DEFAULT_BRUSH_COLOR_OBJECTIVE_NAME, AttributeTypes.atLikelihood, AttributeValueTypes.avtLong, -1, True)
                AddAttribute(ATTRIBUTE_DEFAULT_BRUSH_COLOR_IMPACT_ID, ATTRIBUTE_DEFAULT_BRUSH_COLOR_IMPACT_NAME, AttributeTypes.atImpact, AttributeValueTypes.avtLong, -1, True)

                AddAttribute(ATTRIBUTE_COST_ID, ATTRIBUTE_COST_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtDouble, UNDEFINED_ATTRIBUTE_DEFAULT_DOUBLE_VALUE, True,, "attrCost")
                AddAttribute(ATTRIBUTE_RISK_ID, ATTRIBUTE_RISK_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtDouble, UNDEFINED_ATTRIBUTE_DEFAULT_DOUBLE_VALUE, True,, "attrRisk")
                AddAttribute(ATTRIBUTE_MAPKEY_ID, ATTRIBUTE_MAPKEY_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "", True,, "attrMapKey") 'AS/12323zn

                AddAttribute(ATTRIBUTE_START_ID, ATTRIBUTE_START_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "", True,, "attrStart") 'AS/15597c
                AddAttribute(ATTRIBUTE_FINISH_ID, ATTRIBUTE_FINISH_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "", True,, "attrFinish") 'AS/15597c

                AddAttribute(ATTRIBUTE_RA_ALT_SORT_ID, ATTRIBUTE_RA_ALT_SORT_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, -1)
                AddAttribute(ATTRIBUTE_KNOWN_VALUE_ID, ATTRIBUTE_KNOWN_VALUE_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtDouble, UNDEFINED_ATTRIBUTE_DEFAULT_DOUBLE_VALUE, True,, "attrKnownLikelihood")
                AddAttribute(ATTRIBUTE_NODE_SYNTHESIS_TYPE_ID, ATTRIBUTE_NODE_SYNTHESIS_TYPE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, 0, True) 'A1241
                AddAttribute(ATTRIBUTE_IS_STRUCTURAL_ADJUST_NODE_ID, ATTRIBUTE_IS_STRUCTURAL_ADJUST_NODE_NAME, AttributeTypes.atNode, AttributeValueTypes.avtBoolean, False, True) 'A1240
                AddAttribute(ATTRIBUTE_STRUCTURAL_ADJUST_OPTION_ID, ATTRIBUTE_STRUCTURAL_ADJUST_OPTION_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtBoolean, False, True) 'A1240
                AddAttribute(ATTRIBUTE_RESULTS_ALTERNATIVE_IS_SELECTED_ID, ATTRIBUTE_RESULTS_ALTERNATIVE_IS_SELECTED_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtBoolean, True, True) 'A1120

                AddAttribute(ATTRIBUTE_CONTROL_COST_ID, ATTRIBUTE_CONTROL_COST_NAME, AttributeTypes.atControl, AttributeValueTypes.avtDouble, UNDEFINED_ATTRIBUTE_DEFAULT_DOUBLE_VALUE, True) 'A0885
                AddAttribute(ATTRIBUTE_CONTROL_CATEGORY_ID, ATTRIBUTE_CONTROL_CATEGORY_NAME, AttributeTypes.atControl, AttributeValueTypes.avtEnumerationMulti, , True, ATTRIBUTE_CONTROL_CATEGORY_ENUM_ID) 'A0885

                AddAttribute(ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_MODE_ID, ATTRIBUTE_RATING_SCALE_EVALUATE_DIAGONALS_MODE_NAME, AttributeTypes.atRatingScale, AttributeValueTypes.avtLong, CInt(DiagonalsEvaluation.deFirstAndSecond), True)
                AddAttribute(ATTRIBUTE_RATING_SCALE_FORCE_GRAPHICAL_ID, ATTRIBUTE_RATING_SCALE_FORCE_GRAPHICAL_NAME, AttributeTypes.atRatingScale, AttributeValueTypes.avtBoolean, True, True)
                AddAttribute(ATTRIBUTE_RATING_SCALE_PAIRWISE_TYPE_ID, ATTRIBUTE_RATING_SCALE_PAIRWISE_TYPE_NAME, AttributeTypes.atRatingScale, AttributeValueTypes.avtLong, CInt(Canvas.PairwiseType.ptGraphical), True)
                AddAttribute(ATTRIBUTE_RATING_SCALE_SHOW_INCONSISTENCY_RATIO_ID, ATTRIBUTE_RATING_SCALE_SHOW_INCONSISTENCY_RATIO_NAME, AttributeTypes.atRatingScale, AttributeValueTypes.avtBoolean, True, True)
                AddAttribute(ATTRIBUTE_RATING_SCALE_SHOW_MULTI_PW_ID, ATTRIBUTE_RATING_SCALE_SHOW_MULTI_PW_NAME, AttributeTypes.atRatingScale, AttributeValueTypes.avtBoolean, True, True)

                AddAttribute(ATTRIBUTE_RISK_NODE_TYPE_ID, ATTRIBUTE_RISK_NODE_TYPE_ID_NAME, AttributeTypes.atLikelihood, AttributeValueTypes.avtLong, RiskNodeType.ntUncertainty, True) 'A0829
                AddAttribute(ATTRIBUTE_RISK_NODE_STATICTICAL_DATA_ID, ATTRIBUTE_RISK_NODE_STATICTICAL_DATA_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, , True) 'A1296
                AddAttribute(ATTRIBUTE_RISK_EVENT_SORT_ORDER_ID, ATTRIBUTE_RISK_EVENT_SORT_ORDER_NAME, AttributeTypes.atNode, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, True) 'A1339

                'AddAttribute(ATTRIBUTE_BUDGET_LIMIT_ID, ATTRIBUTE_BUDGET_LIMIT_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtDouble, RiskNodeType.ntUncertainty, True)

                AddAttribute(ATTRIBUTE_RA_IB_PLOT_TITLE_ID, ATTRIBUTE_RA_IB_PLOT_TITLE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtString, "Efficient Frontier", True)  'A0881
                AddAttribute(ATTRIBUTE_RA_IB_PLOT_XAXIS_TITLE_ID, ATTRIBUTE_RA_IB_PLOT_XAXIS_TITLE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtString, "Funded Cost", True)    'A0881 + A0924 + A0931
                AddAttribute(ATTRIBUTE_RA_IB_PLOT_YAXIS_TITLE_ID, ATTRIBUTE_RA_IB_PLOT_YAXIS_TITLE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtString, "Efficiency Percentage", True) 'A0881 + A1569
                AddAttribute(ATTRIBUTE_RO_IB_PLOT_XAXIS_TITLE_ID, ATTRIBUTE_RO_IB_PLOT_XAXIS_TITLE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "Funded Cost", True)  'A1296
                AddAttribute(ATTRIBUTE_RO_IB_PLOT_YAXIS_TITLE_ID, ATTRIBUTE_RO_IB_PLOT_YAXIS_TITLE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "Optimized %%Risk%%", True) 'A1229
                'A1294 ===
                AddAttribute(ATTRIBUTE_IB_PLOT_MIN_BUDGET_IS_MANUAL_ID, ATTRIBUTE_IB_PLOT_MIN_BUDGET_IS_MANUAL_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True)
                AddAttribute(ATTRIBUTE_IB_PLOT_MAX_BUDGET_IS_MANUAL_ID, ATTRIBUTE_IB_PLOT_MAX_BUDGET_IS_MANUAL_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True)
                AddAttribute(ATTRIBUTE_IB_PLOT_MIN_BUDGET_VALUE_ID, ATTRIBUTE_IB_PLOT_MIN_BUDGET_VALUE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True)
                AddAttribute(ATTRIBUTE_IB_PLOT_MAX_BUDGET_VALUE_ID, ATTRIBUTE_IB_PLOT_MAX_BUDGET_VALUE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True)
                AddAttribute(ATTRIBUTE_IB_PLOT_CONSTRAINT_ID_ID, ATTRIBUTE_IB_PLOT_CONSTRAINT_ID_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, -1, True)
                'AddAttribute(ATTRIBUTE_IB_PLOT_CONSTRAINT_MIN_ID, ATTRIBUTE_IB_PLOT_CONSTRAINT_MIN_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True)
                'AddAttribute(ATTRIBUTE_IB_PLOT_CONSTRAINT_MAX_ID, ATTRIBUTE_IB_PLOT_CONSTRAINT_MAX_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True)
                'A1294 ==
                AddAttribute(ATTRIBUTE_IB_HORIZONTAL_SPLITTER_SIZE_ID, ATTRIBUTE_IB_HORIZONTAL_SPLITTER_SIZE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, True) 'A1347
                AddAttribute(ATTRIBUTE_IB_DETAILED_TOOLTIPS_ID, ATTRIBUTE_IB_DETAILED_TOOLTIPS_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, False, True) 'A1348
                AddAttribute(ATTRIBUTE_IB_LAYOUT_MODE_ID, ATTRIBUTE_IB_LAYOUT_MODE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, -1, True) 'A1348 : 0 - Both, 1 - Grid only, 2 - Chart only

                AddAttribute(ATTRIBUTE_RISK_MAP_XAXIS_TITLE_ID, ATTRIBUTE_RISK_MAP_XAXIS_TITLE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True)    'A0887
                AddAttribute(ATTRIBUTE_RISK_MAP_YAXIS_TITLE_ID, ATTRIBUTE_RISK_MAP_YAXIS_TITLE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True)    'A0887
                'AddAttribute(ATTRIBUTE_RISK_SHOW_TOTAL_RISK_ID, ATTRIBUTE_RISK_SHOW_TOTAL_RISK_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True)    'A0938 + A1217
                'AddAttribute(ATTRIBUTE_RISK_SHOW_SIMULATED_RESULTS_ID, ATTRIBUTE_RISK_SHOW_SIMULATED_RESULTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, CInt(ShowResultsModes.rmSimulated), True) 'A1371 + A1382
                AddAttribute(ATTRIBUTE_RISK_SHOW_RISK_REDUCTION_ID, ATTRIBUTE_RISK_SHOW_RISK_REDUCTION_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True)    'A0938
                AddAttribute(ATTRIBUTE_COLUMNS_ORDER_ALTERNATIVES_ID, ATTRIBUTE_COLUMNS_ORDER_ALTERNATIVES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True)    'A0957
                AddAttribute(ATTRIBUTE_COLUMNS_ORDER_PARTICIPANTS_ID, ATTRIBUTE_COLUMNS_ORDER_PARTICIPANTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True)    'A0957

                AddAttribute(ATTRIBUTE_SYNTHESIS_SETTINGS_ID, ATTRIBUTE_SYNTHESIS_SETTINGS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, "", True) 'A0940
                AddAttribute(ATTRIBUTE_SYNTHESIS_LAYOUT_ID, ATTRIBUTE_SYNTHESIS_LAYOUT_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, "layout=9&widget0=2&widget1=3&widget2=4&widget3=6&widget4=-1&widget5=-1", True) 'A1020 + A1153
                AddAttribute(ATTRIBUTE_DASHBOARD_LAYOUT_ID, ATTRIBUTE_DASHBOARD_LAYOUT_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, "layout=9&widget0=2&widget1=3&widget2=4&widget3=6&widget4=-1&widget5=-1", True) 'A1491
                AddAttribute(ATTRIBUTE_SYNTHESIS_DECIMALS_ID, ATTRIBUTE_SYNTHESIS_DECIMALS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, 2, True) 'A1022
                AddAttribute(ATTRIBUTE_SYNTHESIS_SA_USER_ID, ATTRIBUTE_SYNTHESIS_SA_USER_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, COMBINED_USER_ID, True) 'A1022
                AddAttribute(ATTRIBUTE_SYNTHESIS_USERS_ID, ATTRIBUTE_SYNTHESIS_USERS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, COMBINED_USER_ID.ToString + ",", True) 'A1040
                AddAttribute(ATTRIBUTE_SYNTHESIS_ALTS_FILTER_ID, ATTRIBUTE_SYNTHESIS_ALTS_FILTER_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, -1, True) 'A1040
                AddAttribute(ATTRIBUTE_SYNTHESIS_4ASA_USERS_ID, ATTRIBUTE_SYNTHESIS_4ASA_USERS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, True) 'A1216
                AddAttribute(ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_ID, ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, -1, True) 'A1077
                AddAttribute(ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_UID_ID, ATTRIBUTE_SYNTHESIS_ALTS_ADV_FILTER_UID_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, -1, True) 'A1077
                'AddAttribute(ATTRIBUTE_SYNTHESIS_ALTS_CUST_FILTER_ID, ATTRIBUTE_SYNTHESIS_ALTS_CUST_FILTER_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, "", True) 'A1077
                AddAttribute(ATTRIBUTE_SYNTHESIS_CV_SHOW_ALL_ROWS_ID, ATTRIBUTE_SYNTHESIS_CV_SHOW_ALL_ROWS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtBoolean, True, True) 'A1042
                AddAttribute(ATTRIBUTE_SYNTHESIS_CV_SHOW_TOP_N_ROWS_ID, ATTRIBUTE_SYNTHESIS_CV_SHOW_TOP_N_ROWS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, -1, True) 'A1042
                AddAttribute(ATTRIBUTE_SYNTHESIS_SHOW_USERS_WITH_NO_RESULTS_ID, ATTRIBUTE_SYNTHESIS_SHOW_USERS_WITH_NO_RESULTS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtBoolean, True, True) 'A1076
                AddAttribute(ATTRIBUTE_SYNTHESIS_SHOW_COMPONENTS_ID, ATTRIBUTE_SYNTHESIS_SHOW_COMPONENTS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtBoolean, False, True) 'A1271
                AddAttribute(ATTRIBUTE_SYNTHESIS_WRT_STATE_ID, ATTRIBUTE_SYNTHESIS_WRT_STATE_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtLong, 1, True) 'A1343

                AddAttribute(ATTRIBUTE_MANAGE_GROUPS_GRID_SETTINGS_ID, ATTRIBUTE_MANAGE_GROUPS_GRID_SETTINGS_NAME, AttributeTypes.atSynthesisSettings, AttributeValueTypes.avtString, "", True)

                'AddAttribute(ATTRIBUTE_RISK_MAP_DECIMALS_ID, ATTRIBUTE_RISK_MAP_DECIMALS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 2, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_ID, ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_VALUE_ID, ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_VALUE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 10, True) 'A1051
                AddAttribute(ATTRIBUTE_RISK_MAP_ZOOM_PLOT_ID, ATTRIBUTE_RISK_MAP_ZOOM_PLOT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SWITCH_AXES_ID, ATTRIBUTE_RISK_MAP_SWITCH_AXES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SHOW_REGIONS_ID, ATTRIBUTE_RISK_MAP_SHOW_REGIONS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 2, True) 'A0943 + A1405
                AddAttribute(ATTRIBUTE_RISK_MAP_SHOW_LEGENDS_ID, ATTRIBUTE_RISK_MAP_SHOW_LEGENDS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SHOW_LABELS_ID, ATTRIBUTE_RISK_MAP_SHOW_LABELS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_JITTER_DATAPOINTS_ID, ATTRIBUTE_RISK_MAP_JITTER_DATAPOINTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True)
                AddAttribute(ATTRIBUTE_RISK_MAP_EVENT_CLOUD_ID, ATTRIBUTE_RISK_MAP_EVENT_CLOUD_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1289
                AddAttribute(ATTRIBUTE_RISK_RESULTS_COLOR_BY_CATEGORY_ID, ATTRIBUTE_RISK_RESULTS_COLOR_BY_CATEGORY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SHAPE_BY_CATEGORY_ID, ATTRIBUTE_RISK_MAP_SHAPE_BY_CATEGORY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0943
                'AddAttribute(ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_MULT_ID, ATTRIBUTE_RISK_MAP_BUBBLE_SIZE_MULT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, 1, True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SELECTED_COLOR_CATEGORY_ID, ATTRIBUTE_RISK_MAP_SELECTED_COLOR_CATEGORY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_MAP_SELECTED_SHAPE_CATEGORY_ID, ATTRIBUTE_RISK_MAP_SELECTED_SHAPE_CATEGORY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0943
                AddAttribute(ATTRIBUTE_RISK_SELECTED_LIKELIHOOD_NODE_ID, ATTRIBUTE_RISK_SELECTED_LIKELIHOOD_NODE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0944
                AddAttribute(ATTRIBUTE_RISK_SELECTED_IMPACT_NODE_ID, ATTRIBUTE_RISK_SELECTED_IMPACT_NODE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0944
                AddAttribute(ATTRIBUTE_RISK_SELECTED_EVENT_ID, ATTRIBUTE_RISK_SELECTED_EVENT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0944
                AddAttribute(ATTRIBUTE_RISK_SELECTED_TREATMENT_ID, ATTRIBUTE_RISK_SELECTED_TREATMENT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A1048
                AddAttribute(ATTRIBUTE_RISK_BOWTIE_SHOW_FULL_PATHS_ID, ATTRIBUTE_RISK_BOWTIE_SHOW_FULL_PATHS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1229
                'AddAttribute(ATTRIBUTE_RISK_EVENT_TYPE_ID, ATTRIBUTE_RISK_EVENT_TYPE_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtLong, 0, True) 'A1535
                AddAttribute(ATTRIBUTE_RISK_BOWTIE_SHOW_EVENT_ATTR_UI_ID, ATTRIBUTE_RISK_BOWTIE_SHOW_EVENT_ATTR_UI_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1250
                AddAttribute(ATTRIBUTE_RISK_BOWTIE_SHOW_BACKGROUND_ID, ATTRIBUTE_RISK_BOWTIE_SHOW_BACKGROUND_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1250
                AddAttribute(ATTRIBUTE_RISK_MULTISELECT_ENABLED_ID, ATTRIBUTE_RISK_MULTISELECT_ENABLED_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0944
                AddAttribute(ATTRIBUTE_RA_SHOW_ALT_ATTRIBUTES_ID, ATTRIBUTE_RA_SHOW_ALT_ATTRIBUTES_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, False, True) 'A1010
                AddAttribute(ATTRIBUTE_RA_SB_SYNTHESIS_MODE_ID, ATTRIBUTE_RA_SB_SYNTHESIS_MODE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, 0, True) 'A0946
                AddAttribute(ATTRIBUTE_RA_SB_NORMALIZATION_MODE_ID, ATTRIBUTE_RA_SB_NORMALIZATION_MODE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, 0, True) 'A0946
                'AddAttribute(ATTRIBUTE_RA_SB_DECIMALS_ID, ATTRIBUTE_RA_SB_DECIMALS_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, 3, True) 'A0946
                AddAttribute(ATTRIBUTE_RA_SB_SORT_COLUMN_ID, ATTRIBUTE_RA_SB_SORT_COLUMN_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, 1, True) 'A0970
                AddAttribute(ATTRIBUTE_RISK_MAP_SORT_LEGEND_COL_ID, ATTRIBUTE_RISK_MAP_SORT_LEGEND_COL_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 4, True) 'A0947
                AddAttribute(ATTRIBUTE_RISK_MAP_SORT_LEGEND_DIR_ID, ATTRIBUTE_RISK_MAP_SORT_LEGEND_DIR_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 1, True) 'A0947
                AddAttribute(ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_TOP_ID, ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_TOP_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1367
                AddAttribute(ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_LEFT_ID, ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_LEFT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1367
                AddAttribute(ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_RIGHT_ID, ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_RIGHT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1367
                AddAttribute(ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_BOTTOM_ID, ATTRIBUTE_RISK_MAP_REVERSE_ZOOM_BOTTOM_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1367
                AddAttribute(ATTRIBUTE_RISK_MAP_WRT_RISK_LOW_ID, ATTRIBUTE_RISK_MAP_WRT_RISK_LOW_NAME, AttributeTypes.atNode, AttributeValueTypes.avtDouble, -1, True)
                AddAttribute(ATTRIBUTE_RISK_MAP_WRT_RISK_HIGH_ID, ATTRIBUTE_RISK_MAP_WRT_RISK_HIGH_NAME, AttributeTypes.atNode, AttributeValueTypes.avtDouble, -1, True)
                AddAttribute(ATTRIBUTE_RISK_SHOW_CENTS_ID, ATTRIBUTE_RISK_SHOW_CENTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1402
                AddAttribute(ATTRIBUTE_RISK_SHOW_ATTRIBUTES_ID, ATTRIBUTE_RISK_SHOW_ATTRIBUTES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0949
                AddAttribute(ATTRIBUTE_RISK_GROUP_BY_ATTRIBUTE_ID, ATTRIBUTE_RISK_GROUP_BY_ATTRIBUTE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0949
                AddAttribute(ATTRIBUTE_RISK_GROUP_BY_ATTR_GUID_ID, ATTRIBUTE_RISK_GROUP_BY_ATTR_GUID_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0949
                AddAttribute(ATTRIBUTE_RISK_GRID_SORT_EXPRESSION_ID, ATTRIBUTE_RISK_GRID_SORT_EXPRESSION_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0950                                
                AddAttribute(ATTRIBUTE_RISK_GRID_SORT_DIRECTION_ID, ATTRIBUTE_RISK_GRID_SORT_DIRECTION_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A0950                
                AddAttribute(ATTRIBUTE_RISK_GRID_SORT_EXPRESSION2_ID, ATTRIBUTE_RISK_GRID_SORT_EXPRESSION2_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0950
                AddAttribute(ATTRIBUTE_RISK_GRID_SORT_DIRECTION2_ID, ATTRIBUTE_RISK_GRID_SORT_DIRECTION2_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A0950
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_SELECTED_PARTICIPANTS_ID, ATTRIBUTE_RISK_RESULTS_SELECTED_PARTICIPANTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SELECTED_USER_ID, ATTRIBUTE_RISK_RESULTS_SELECTED_USER_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, COMBINED_USER_ID, True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_LOCAL_PRTY_ID, ATTRIBUTE_RISK_RESULTS_SHOW_LOCAL_PRTY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_GLOBAL_PRTY_ID, ATTRIBUTE_RISK_RESULTS_SHOW_GLOBAL_PRTY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_CONTROLS_NAMES_ID, ATTRIBUTE_RISK_RESULTS_SHOW_CONTROLS_NAMES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1179
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_GROUPS_TOTALS_ID, ATTRIBUTE_RISK_RESULTS_SHOW_GROUPS_TOTALS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1179                
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_NORMALIZED_LKHD_ID, ATTRIBUTE_RISK_RESULTS_NORMALIZED_LKHD_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 2, True) 'A0951 // SynthesisMode.smAbsolute = 2
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_LKHD_ID, ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_LKHD_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 3, True) 'A0951 // LocalNormalizationType.ntUnnormalized = 3
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_IMPACT_ID, ATTRIBUTE_RISK_RESULTS_NORMALIZED_LOCAL_IMPACT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 3, True) 'A0951 // LocalNormalizationType.ntUnnormalized = 3
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_ID, ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0951
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_HIERARCHY_ID, ATTRIBUTE_RISK_RESULTS_USE_CONTROLS_REDUCTION_HIERARCHY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A0951
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_PANES_COLLAPSE_STATE_ID, ATTRIBUTE_RISK_RESULTS_PANES_COLLAPSE_STATE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_BARS_RELATIVE_TO_1_STATE_ID, ATTRIBUTE_RISK_RESULTS_BARS_RELATIVE_TO_1_STATE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A0951
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SELECTED_COLUMNS_ID, ATTRIBUTE_RISK_RESULTS_SELECTED_COLUMNS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A1201
                AddAttribute(ATTRIBUTE_DATAGRID_HIDDEN_COLUMNS_ID, ATTRIBUTE_DATAGRID_HIDDEN_COLUMNS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A1478
                AddAttribute(ATTRIBUTE_RISK_ROLES_CONTROLS_TYPE_ID, ATTRIBUTE_RISK_ROLES_CONTROLS_TYPE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, -1, True) 'A1055
                'AddAttribute(ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_EVENTS_IDS_ID, ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_EVENTS_IDS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "all", True) 'A1218
                AddAttribute(ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_IB_ZOOM_PLOT_ID, ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_IB_ZOOM_PLOT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1253
                'AddAttribute(ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_CONTROL_IDS_ID, ATTRIBUTE_RISK_TREATMENTS_OPTIMIZE_CONTROL_IDS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "all", True) 'A1254
                'AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_BUDGET_ID, ATTRIBUTE_RISK_OPTIMIZER_BUDGET_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, 600, True) 'A1232
                AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_TYPE_ID, ATTRIBUTE_RISK_OPTIMIZER_TYPE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1237
                'AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_Y_AXIS_0_ID, ATTRIBUTE_RISK_OPTIMIZER_Y_AXIS_0_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1322
                AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_SHOW_SOLVER_PANE_RISK_RESULTS_ID, ATTRIBUTE_RISK_OPTIMIZER_SHOW_SOLVER_PANE_RISK_RESULTS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1322
                'AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_MAX_RISK_ID, ATTRIBUTE_RISK_OPTIMIZER_MAX_RISK_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, 0, True) 'A1237
                'AddAttribute(ATTRIBUTE_RISK_OPTIMIZER_MIN_REDUCTION_ID, ATTRIBUTE_RISK_OPTIMIZER_MIN_REDUCTION_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, 0, True) 'A1237
                'AddAttribute(ATTRIBUTE_RISK_CONTROLS_MANUAL_ID, ATTRIBUTE_RISK_CONTROLS_MANUAL_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1270
                AddAttribute(ATTRIBUTE_RISK_CONTROL_ENABLED_ID, ATTRIBUTE_RISK_CONTROL_ENABLED_NAME, AttributeTypes.atControl, AttributeValueTypes.avtBoolean, True, True) 'A1394
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_INCREMENT_ID, ATTRIBUTE_RA_PARETO_CURVE_INCREMENT_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtDouble, -1, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_DECREMENT_ID, ATTRIBUTE_RA_PARETO_CURVE_DECREMENT_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtDouble, -1, True) 'A1267
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_NUM_INCREMENTS_ID, ATTRIBUTE_RA_PARETO_CURVE_NUM_INCREMENTS_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, -1, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_PRECISION_ID, ATTRIBUTE_RA_PARETO_CURVE_PRECISION_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, -1, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_INCREASE_MODE_ID, ATTRIBUTE_RA_PARETO_CURVE_INCREASE_MODE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, -1, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_GRID_MODE_ID, ATTRIBUTE_RA_PARETO_CURVE_GRID_MODE_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, False, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_KEEP_FUNDED_ID, ATTRIBUTE_RA_PARETO_CURVE_KEEP_FUNDED_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, False, True) 'A0953
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_FROM_ID, ATTRIBUTE_RA_PARETO_CURVE_FROM_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1310
                AddAttribute(ATTRIBUTE_RA_PARETO_CURVE_TO_ID, ATTRIBUTE_RA_PARETO_CURVE_TO_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1310
                AddAttribute(ATTRIBUTE_RA_DEPENDENCIES_VIEW_ID, ATTRIBUTE_RA_DEPENDENCIES_VIEW_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, False, True) ' D3781 + D3788 'AS/12323zi
                AddAttribute(ATTRIBUTE_RA_SHOW_CC_ID, ATTRIBUTE_RA_SHOW_CC_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtBoolean, True, True) ' D3781
                AddAttribute(ATTRIBUTE_RA_COLUMNS_VERSION_ID, ATTRIBUTE_RA_COLUMNS_LIST_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtLong, 4, True) ' D3781
                AddAttribute(ATTRIBUTE_RA_COLUMNS_LIST_ID, ATTRIBUTE_RA_COLUMNS_LIST_NAME, AttributeTypes.atRASettings, AttributeValueTypes.avtString, "", True) ' D3781
                AddAttribute(ATTRIBUTE_INFODOC_PARAMS_ID, ATTRIBUTE_INFODOC_PARAMS_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)
                AddAttribute(ATTRIBUTE_HIERARCHY_SHOW_ALTERNATIVES_ID, ATTRIBUTE_HIERARCHY_SHOW_ALTERNATIVES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1012
                AddAttribute(ATTRIBUTE_INFODOC_PARAMS_GECKO_ID, ATTRIBUTE_INFODOC_PARAMS_GECKO_NAME, AttributeTypes.atNode, AttributeValueTypes.avtString, "", True)    ' D3554
                AddAttribute(ATTRIBUTE_HIERARCHY_ACTIVE_VIEW_ID, ATTRIBUTE_HIERARCHY_ACTIVE_VIEW_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 1, True) 'A1041
                AddAttribute(ATTRIBUTE_CUSTOM_EMAIL_ID, ATTRIBUTE_CUSTOM_EMAIL_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtString, "", True)  ' D3580
                AddAttribute(ATTRIBUTE_MEASUREMENT_METHODS_MODE_ID, ATTRIBUTE_MEASUREMENT_METHODS_MODE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 2, True) 'A1086 - CInt(MeasurementMethodsPageTypes.mmObj)
                'AddAttribute(ATTRIBUTE_EXPERT_MODE_ID, ATTRIBUTE_EXPERT_MODE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, -1, True) 'A1089
                AddAttribute(ATTRIBUTE_DOLLAR_VALUE_ID, ATTRIBUTE_DOLLAR_VALUE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True)
                AddAttribute(ATTRIBUTE_DOLLAR_VALUE_TARGET_ID, ATTRIBUTE_DOLLAR_VALUE_TARGET_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtString, "", True) 'A1225
                AddAttribute(ATTRIBUTE_SHOW_DOLLAR_VALUE_ID, ATTRIBUTE_SHOW_DOLLAR_VALUE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1204
                'AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_ID_ID, ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_ID_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1261
                AddAttribute(ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_DESCRIPTIONS_ID, ATTRIBUTE_RISK_RESULTS_SHOW_EVENT_DESCRIPTIONS_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1263
                AddAttribute(ATTRIBUTE_ALTERNAITVE_FUNDED_IN_CURRENT_SCENARIO_ID, ATTRIBUTE_ALTERNAITVE_FUNDED_IN_CURRENT_SCENARIO_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1114
                AddAttribute(ATTRIBUTE_NAME_OF_ENTERPRISE_ID, ATTRIBUTE_NAME_OF_ENTERPRISE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtString, "Enterprise", True) 'A1116
                AddAttribute(ATTRIBUTE_EVALUATION_PROGRESS_SORT_ID, ATTRIBUTE_EVALUATION_PROGRESS_SORT_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtString, "[3, 'desc']", True)
                AddAttribute(ATTRIBUTE_EVALUATION_PROGRESS_FILTER_BY_GROUP_ID, ATTRIBUTE_EVALUATION_PROGRESS_FILTER_BY_GROUP_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, COMBINED_USER_ID, True) 'A1223
                AddAttribute(DYNAMIC_ATTRIBUTE_GROUP_INCONSISTENCY_ID, DYNAMIC_ATTRIBUTE_GROUP_INCONSISTENCY_NAME, AttributeTypes.atUser, AttributeValueTypes.avtDouble, 0, True) 'A1175
                'AddAttribute(ATTRIBUTE_QUICKHELP_AUTOSHOW, ATTRIBUTE_QUICKHELP_AUTOSHOW_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtBoolean, True, True)    ' D3738 -D3741
                AddAttribute(ATTRIBUTE_LEC_NUM_SIMULATIONS_ID, ATTRIBUTE_LEC_NUM_SIMULATIONS_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 1000, True) 'A1236
                AddAttribute(ATTRIBUTE_LEC_NUM_DATAPOINTS_ID, ATTRIBUTE_LEC_NUM_DATAPOINTS_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 50, True) 'A1236
                AddAttribute(ATTRIBUTE_LEC_CURVES_WITH_CONTROLS_SHOW_ID, ATTRIBUTE_LEC_CURVES_WITH_CONTROLS_SHOW_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 0, True) 'A1236
                AddAttribute(ATTRIBUTE_LEC_EVENT_TYPE_ID, ATTRIBUTE_LEC_EVENT_TYPE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 0, True) 'A1236 
                AddAttribute(ATTRIBUTE_LEC_SOURCES_TYPE_ID, ATTRIBUTE_LEC_SOURCES_TYPE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 0, True) 'A1350
                'AddAttribute(ATTRIBUTE_LEC_DISPLAY_MODE_ID, ATTRIBUTE_LEC_DISPLAY_MODE_NAME, AttributeTypes.atProjectSettings, AttributeValueTypes.avtLong, 0, True) 'A1236
                AddAttribute(ATTRIBUTE_LEC_ZOOM_PLOT_ID, ATTRIBUTE_LEC_ZOOM_PLOT_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1254
                AddAttribute(ATTRIBUTE_LEC_RAND_SEED_ID, ATTRIBUTE_LEC_RAND_SEED_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, -1, True) 'A1255
                AddAttribute(ATTRIBUTE_LEC_KEEP_RAND_SEED_ID, ATTRIBUTE_LEC_KEEP_RAND_SEED_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1300
                AddAttribute(ATTRIBUTE_LEC_RED_LINE_VALUE_ID, ATTRIBUTE_LEC_RED_LINE_VALUE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1290 + A1294
                AddAttribute(ATTRIBUTE_LEC_GREEN_LINE_VALUE_PRC_ID, ATTRIBUTE_LEC_GREEN_LINE_VALUE_PRC_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1332
                'AddAttribute(ATTRIBUTE_LEC_GREEN_LINE_VALUE_DOLL_ID, ATTRIBUTE_LEC_GREEN_LINE_VALUE_DOLL_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtDouble, UNDEFINED_INTEGER_VALUE, True) 'A1344
                'AddAttribute(ATTRIBUTE_LEC_TRUNCATE_ID, ATTRIBUTE_LEC_TRUNCATE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1301
                AddAttribute(ATTRIBUTE_LEC_SELECTED_CATEGORY_ID, ATTRIBUTE_LEC_SELECTED_CATEGORY_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtString, "", True) 'A1302
                AddAttribute(ATTRIBUTE_LEC_LIMIT_IMPACTS_100_ID, ATTRIBUTE_LEC_LIMIT_IMPACTS_100_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1302 + A1374
                AddAttribute(ATTRIBUTE_LEC_EVENT_EXCL_GROUPS_ENABLED_ID, ATTRIBUTE_LEC_EVENT_EXCL_GROUPS_ENABLED_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True) 'A1303
                AddAttribute(ATTRIBUTE_LEC_SOURCE_GROUPS_ENABLED_ID, ATTRIBUTE_LEC_SOURCE_GROUPS_ENABLED_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, True, True)
                'AddAttribute(ATTRIBUTE_LEC_EVENT_EXCL_GROUP_NAME_ID, ATTRIBUTE_LEC_EVENT_EXCL_GROUP_NAME_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "", True) 'A1303
                'AddAttribute(ATTRIBUTE_LEC_EVENT_EXCL_GROUP_PRECEDENCE_ID, ATTRIBUTE_LEC_EVENT_EXCL_GROUP_PRECEDENCE_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, True) 'A1303
                AddAttribute(ATTRIBUTE_LEC_SIMULATION_MODE_ID, ATTRIBUTE_LEC_SIMULATION_MODE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True) 'A1350
                AddAttribute(ATTRIBUTE_RISKION_CONSEQUENCES_CALC_ID, ATTRIBUTE_RISKION_CONSEQUENCES_CALC_MODE_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtLong, 0, True)
                'AddAttribute(ATTRIBUTE_LEC_ALLOW_EVENT_FIRE_MULTIPLE_TIMES_ID, ATTRIBUTE_LEC_ALLOW_EVENT_FIRE_MULTIPLE_TIMES_NAME, AttributeTypes.atRiskSettings, AttributeValueTypes.avtBoolean, False, True) 'A1362 + A1374
                AddAttribute(ATTRIBUTE_ALTERNATIVE_USER_RANK_ID, ATTRIBUTE_ALTERNATIVE_USER_RANK_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtLong, -1, True) ' D6671

                ' User Attributes A1314 ===
                AddAttribute(ATTRIBUTE_USER_COLOR_ID, ATTRIBUTE_USER_COLOR_NAME, AttributeTypes.atUser, AttributeValueTypes.avtLong, UNDEFINED_INTEGER_VALUE, True) 
                'AddAttribute(ATTRIBUTE_USER_PHONE_ID, ATTRIBUTE_USER_PHONE_NAME, AttributeTypes.atUser, AttributeValueTypes.avtString, "", True)
                'AddAttribute(ATTRIBUTE_USER_VISITED_SURVEY_QUESTION_ID, ATTRIBUTE_USER_VISITED_SURVEY_QUESTION_NAME, AttributeTypes.atUser, AttributeValueTypes.avtBoolean, False, True)
                ' User Attributes
                AddAttribute(ATTRIBUTE_ALTERNATIVE_PROS_ID, ATTRIBUTE_ALTERNATIVE_PROS_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "[]", True) 
                AddAttribute(ATTRIBUTE_ALTERNATIVE_CONS_ID, ATTRIBUTE_ALTERNATIVE_CONS_NAME, AttributeTypes.atAlternative, AttributeValueTypes.avtString, "[]", True)
            End Sub

            Public Sub New(ByVal ProjectManager As clsProjectManager)
                Me.ProjectManager = ProjectManager

                AddDefaultAttributes()
            End Sub
        End Class
    End Module
End Namespace